{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\SPB_Data\\\\keyloud_assemble\\\\frontend\\\\src\\\\components\\\\HomeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/HomeScreen.css\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"../AppContext.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [searchResults, setSearchResults] = useState([]);\n  const {\n    folders,\n    uploadedFiles,\n    addFolder,\n    addFileToFolder,\n    setUploadedFiles\n  } = useContext(AppContext);\n  const [isUploadMenuOpen, setUploadMenuOpen] = useState(false);\n  const [addedFolders, setAddedFolders] = useState([{\n    name: \"최근 업로드 폴더\",\n    id: 1\n  }]);\n  const [userKeyword, setUserKeyword] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [isRenamePopupOpen, setRenamePopupOpen] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const [folderFiles, setFolderFiles] = useState({});\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\n  const [filteredFilesObj, setFilteredFilesObj] = useState({});\n\n  // 폴더와 파일 필터링\n  const filteredFoldersAndFiles = addedFolders.filter(folder => folder.name.toLowerCase().includes(searchKeyword.toLowerCase()) || filteredFiles(folder.name).some(file => file.filename.toLowerCase().includes(searchKeyword.toLowerCase())));\n  useEffect(() => {\n    const filteredFiles = folderName => folderFiles[folderName] ? folderFiles[folderName].filter(file => file.filename.toLowerCase().includes(searchKeyword.toLowerCase())) : [];\n\n    // 파일 필터링\n    const calculateFilteredFiles = () => {\n      const newFilteredFilesObj = {};\n      addedFolders.forEach(folder => {\n        newFilteredFilesObj[folder.name] = filteredFiles(folder.name);\n      });\n      setFilteredFilesObj(newFilteredFilesObj);\n    };\n\n    // 초기 로딩 시에도 호출\n    calculateFilteredFiles();\n  }, [addedFolders, folderFiles, searchKeyword]);\n  useEffect(() => {\n    // 페이지 로드 시 로컬 스토리지에서 uploadedFiles 값을 가져옴\n    const storedUploadedFiles = localStorage.getItem(\"uploadedFiles\");\n    if (storedUploadedFiles) {\n      setUploadedFiles(JSON.parse(storedUploadedFiles));\n    }\n\n    // 로컬 스토리지에서 폴더 정보를 가져옴\n    const storedFolders = localStorage.getItem(\"addedFolders\");\n    if (storedFolders) {\n      setAddedFolders(JSON.parse(storedFolders));\n    } else {\n      // 초기 폴더 정보 설정\n      setAddedFolders([{\n        name: \"최근 업로드 폴더\",\n        id: 1\n      }]);\n      localStorage.setItem(\"addedFolders\", JSON.stringify([{\n        name: \"최근 업로드 폴더\",\n        id: 1\n      }]));\n    }\n  }, [setUploadedFiles, setAddedFolders]);\n  useEffect(() => {\n    const storedFolderFiles = localStorage.getItem(\"folderFiles\");\n    if (storedFolderFiles) {\n      setFolderFiles(JSON.parse(storedFolderFiles));\n    }\n    const storedFolders = localStorage.getItem(\"addedFolders\");\n    if (storedFolders) {\n      setAddedFolders(JSON.parse(storedFolders));\n    } else {\n      setAddedFolders([{\n        name: \"최근 업로드 폴더\",\n        id: 1\n      }]);\n      localStorage.setItem(\"addedFolders\", JSON.stringify([{\n        name: \"최근 업로드 폴더\",\n        id: 1\n      }]));\n    }\n  }, [setFolderFiles, setAddedFolders]);\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      localStorage.setItem(\"uploadedFiles\", JSON.stringify(uploadedFiles));\n      localStorage.setItem(\"addedFolders\", JSON.stringify(addedFolders));\n      localStorage.setItem(\"folderFiles\", JSON.stringify(folderFiles));\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [uploadedFiles, addedFolders, folderFiles]);\n  const [isCreateFolderPopupOpen, setCreateFolderPopupOpen] = useState(false);\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [isFileUploadPopupOpen, setFileUploadPopupOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [customFileName, setCustomFileName] = useState(\"\");\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\n  const [uploadedFilesState, setUploadedFilesState] = useState({});\n  const [folderVisibility, setFolderVisibility] = useState({});\n  const handleUploadButtonClick = () => {\n    setUploadMenuOpen(!isUploadMenuOpen);\n  };\n  const handleFileUploadButtonClick = () => {\n    setFileUploadPopupOpen(true);\n  };\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n  const handleUpload = async () => {\n    try {\n      if (!selectedFile || !selectedFolder) {\n        console.error(\"No file selected\");\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"files\", selectedFile);\n      formData.append(\"customFileName\", customFileName);\n      formData.append(\"selectedFolder\", selectedFolder);\n      formData.append(\"uploadDate\", new Date().toISOString());\n      formData.append(\"folderName\", selectedFolder);\n      const response = await axios.post(\"http://localhost:5000/upload_files\", formData);\n\n      //const data = await response.json();\n      console.log(response.data.message);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n\n  // 폴더 필터링\n  // 폴더 필터링\n  const filteredFolders = addedFolders.filter(folder => folder.name.toLowerCase().includes(searchKeyword.toLowerCase()));\n  const handleSearchButtonClick = () => {\n    setSearchKeyword(userKeyword);\n  };\n  const handleFolderIconClick = async folderName => {\n    try {\n      const response = await axios.get(`http://localhost:5000/get_files?folder=${encodeURIComponent(folderName)}`);\n      const files = response.data;\n      console.log(files);\n\n      // 클릭한 폴더의 가시성을 토글합니다.\n      setFolderVisibility(prevVisibility => ({\n        ...prevVisibility,\n        [folderName]: !prevVisibility[folderName]\n      }));\n\n      // 파일 목록 상태를 업데이트합니다.\n      setFolderFiles(prevFiles => ({\n        ...prevFiles,\n        [folderName]: files\n      }));\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      // 에러 처리 로직 추가\n    }\n  };\n  const handleCreateFolderButtonClick = () => {\n    setCreateFolderPopupOpen(true);\n  };\n  const handleCreateFolder = async () => {\n    if (newFolderName.trim() !== \"\") {\n      const newFolder = {\n        name: newFolderName,\n        id: Date.now()\n      };\n      setAddedFolders(prevFolders => [...prevFolders, newFolder]);\n      localStorage.setItem(\"addedFolders\", JSON.stringify([...addedFolders, newFolder]));\n      addFolder(newFolder);\n\n      // 서버에 새로운 폴더 정보 전송\n      try {\n        await axios.post(\"http://localhost:5000/create_folder\", {\n          folder: newFolder\n        });\n      } catch (error) {\n        console.error('Error creating folder:', error);\n        // 에러 처리 로직 추가\n      }\n      setNewFolderName(\"\");\n    }\n    setCreateFolderPopupOpen(false);\n  };\n  const handleRename = () => {\n    if (newName.trim() !== \"\") {\n      const updatedFolders = addedFolders.map(folder => folder.id === selectedItem.id ? {\n        ...folder,\n        name: newName\n      } : folder);\n      setAddedFolders(updatedFolders);\n      setRenamePopupOpen(false);\n      setSelectedItem(null);\n    }\n  };\n  const handleMoveToTrash = () => {\n    if (newName.trim() !== \"\") {\n      const updatedFolders = addedFolders.map(folder => folder.id === selectedItem.id ? {\n        ...folder,\n        name: newName\n      } : folder);\n      setAddedFolders(updatedFolders);\n      setRenamePopupOpen(false);\n      setSelectedItem(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC804\\uCCB4\\uAC80\\uC0C9\\uCC3D(\\uBE60\\uB978\\uAC80\\uC0C9)\",\n      className: \"search-input\",\n      value: userKeyword,\n      onChange: e => setUserKeyword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearchButtonClick,\n      children: \"\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), filteredFoldersAndFiles.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-content\",\n        onClick: () => handleFolderIconClick(folder.name),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-icon img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/folder-icon.png\",\n            alt: \"\\uD3F4\\uB354 \\uC544\\uC774\\uCF58\",\n            style: {\n              width: \"20px\",\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-name\",\n          children: folder.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), folderVisibility[folder.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-files-container\",\n        children: filteredFiles(folder.name).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-file\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/file-icon.png\",\n            alt: \"File Icon\",\n            className: \"file-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-name\",\n            children: file.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-date\",\n            children: file.uploadDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }, this)]\n    }, folder.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: handleUploadButtonClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/upload.png\",\n        alt: \"\\uC5C5\\uB85C\\uB4DC \\uC544\\uC774\\uCF58\",\n        style: {\n          width: \"40px\",\n          height: \"35px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), isUploadMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-menu-button\",\n        onClick: handleCreateFolderButtonClick,\n        children: \"\\uD3F4\\uB354 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-menu-button\",\n        onClick: handleFileUploadButtonClick,\n        children: \"\\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this), isCreateFolderPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-folder-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"create-folder-input\",\n        type: \"text\",\n        placeholder: \"\\uD3F4\\uB354\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-folder-button\",\n        onClick: handleCreateFolder,\n        children: \"\\uD3F4\\uB354 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), isFileUploadPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-upload-input\",\n        type: \"file\",\n        onChange: handleFileSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-upload-custom-input\",\n        type: \"text\",\n        placeholder: \"\\uD30C\\uC77C\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: customFileName,\n        onChange: e => setCustomFileName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"file-upload-select\",\n        value: selectedFolder,\n        onChange: e => setSelectedFolder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), addedFolders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: folder.name,\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"file-upload-button\",\n        onClick: handleUpload,\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }, this), isRenamePopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rename-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC0C8\\uB85C\\uC6B4 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"\\uC774\\uB984 \\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMoveToTrash,\n        children: \"\\uD734\\uC9C0\\uD1B5\\uC73C\\uB85C \\uC774\\uB3D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeScreen, \"fou8onJVS9auplAaCkBLNmkR5BQ=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AppContext","useNavigate","axios","jsxDEV","_jsxDEV","HomeScreen","_s","navigate","searchResults","setSearchResults","folders","uploadedFiles","addFolder","addFileToFolder","setUploadedFiles","isUploadMenuOpen","setUploadMenuOpen","addedFolders","setAddedFolders","name","id","userKeyword","setUserKeyword","selectedItem","setSelectedItem","isRenamePopupOpen","setRenamePopupOpen","newName","setNewName","folderFiles","setFolderFiles","searchKeyword","setSearchKeyword","filteredFilesObj","setFilteredFilesObj","filteredFoldersAndFiles","filter","folder","toLowerCase","includes","filteredFiles","some","file","filename","folderName","calculateFilteredFiles","newFilteredFilesObj","forEach","storedUploadedFiles","localStorage","getItem","JSON","parse","storedFolders","setItem","stringify","storedFolderFiles","handleBeforeUnload","window","addEventListener","removeEventListener","isCreateFolderPopupOpen","setCreateFolderPopupOpen","newFolderName","setNewFolderName","isFileUploadPopupOpen","setFileUploadPopupOpen","selectedFile","setSelectedFile","customFileName","setCustomFileName","selectedFolder","setSelectedFolder","uploadedFilesState","setUploadedFilesState","folderVisibility","setFolderVisibility","handleUploadButtonClick","handleFileUploadButtonClick","handleFileSelect","event","target","files","handleUpload","console","error","formData","FormData","append","Date","toISOString","response","post","log","data","message","filteredFolders","handleSearchButtonClick","handleFolderIconClick","get","encodeURIComponent","prevVisibility","prevFiles","handleCreateFolderButtonClick","handleCreateFolder","trim","newFolder","now","prevFolders","handleRename","updatedFolders","map","handleMoveToTrash","children","type","placeholder","className","value","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","style","width","height","index","uploadDate","disabled","_c","$RefreshReg$"],"sources":["C:/Users/USER/AppData/Roaming/SPB_Data/keyloud_assemble/frontend/src/components/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/HomeScreen.css\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../AppContext.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nconst HomeScreen = () => {\r\n  const navigate = useNavigate();\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const {\r\n    folders,\r\n    uploadedFiles,\r\n    addFolder,\r\n    addFileToFolder,\r\n    setUploadedFiles,\r\n  } = useContext(AppContext);\r\n  const [isUploadMenuOpen, setUploadMenuOpen] = useState(false);\r\n  const [addedFolders, setAddedFolders] = useState([\r\n    { name: \"최근 업로드 폴더\", id: 1 },\r\n  ]);\r\n  const [userKeyword, setUserKeyword] = useState(\"\");\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isRenamePopupOpen, setRenamePopupOpen] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [folderFiles, setFolderFiles] = useState({});\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n  const [filteredFilesObj, setFilteredFilesObj] = useState({});\r\n\r\n    // 폴더와 파일 필터링\r\n  const filteredFoldersAndFiles = addedFolders.filter((folder) =>\r\n    folder.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\r\n    filteredFiles(folder.name).some((file) =>\r\n      file.filename.toLowerCase().includes(searchKeyword.toLowerCase())\r\n    )\r\n  );\r\n\r\n  useEffect(() => {\r\n\r\n    const filteredFiles = (folderName) =>\r\n    folderFiles[folderName]\r\n      ? folderFiles[folderName].filter((file) =>\r\n          file.filename.toLowerCase().includes(searchKeyword.toLowerCase())\r\n        )\r\n      : [];\r\n\r\n    // 파일 필터링\r\n    const calculateFilteredFiles = () => {\r\n      const newFilteredFilesObj = {};\r\n      addedFolders.forEach((folder) => {\r\n        newFilteredFilesObj[folder.name] = filteredFiles(folder.name);\r\n      });\r\n      setFilteredFilesObj(newFilteredFilesObj);\r\n    };\r\n  \r\n    // 초기 로딩 시에도 호출\r\n    calculateFilteredFiles();\r\n  }, [addedFolders, folderFiles, searchKeyword]);\r\n\r\n\r\n  useEffect(() => {\r\n    // 페이지 로드 시 로컬 스토리지에서 uploadedFiles 값을 가져옴\r\n    const storedUploadedFiles = localStorage.getItem(\"uploadedFiles\");\r\n    if (storedUploadedFiles) {\r\n      setUploadedFiles(JSON.parse(storedUploadedFiles));\r\n    }\r\n\r\n    // 로컬 스토리지에서 폴더 정보를 가져옴\r\n    const storedFolders = localStorage.getItem(\"addedFolders\");\r\n    if (storedFolders) {\r\n      setAddedFolders(JSON.parse(storedFolders));\r\n    } else {\r\n      // 초기 폴더 정보 설정\r\n      setAddedFolders([{ name: \"최근 업로드 폴더\", id: 1 }]);\r\n      localStorage.setItem(\"addedFolders\", JSON.stringify([{ name: \"최근 업로드 폴더\", id: 1 }]));\r\n    }\r\n  }, [setUploadedFiles, setAddedFolders]);\r\n\r\n  useEffect(() => {\r\n    const storedFolderFiles = localStorage.getItem(\"folderFiles\");\r\n    if (storedFolderFiles) {\r\n      setFolderFiles(JSON.parse(storedFolderFiles));\r\n    }\r\n\r\n    const storedFolders = localStorage.getItem(\"addedFolders\");\r\n    if (storedFolders) {\r\n      setAddedFolders(JSON.parse(storedFolders));\r\n    } else {\r\n      setAddedFolders([{ name: \"최근 업로드 폴더\", id: 1 }]);\r\n      localStorage.setItem(\r\n        \"addedFolders\",\r\n        JSON.stringify([{ name: \"최근 업로드 폴더\", id: 1 }])\r\n      );\r\n    }\r\n  }, [setFolderFiles, setAddedFolders]);\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      localStorage.setItem(\"uploadedFiles\", JSON.stringify(uploadedFiles));\r\n      localStorage.setItem(\"addedFolders\", JSON.stringify(addedFolders));\r\n      localStorage.setItem(\"folderFiles\", JSON.stringify(folderFiles));\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    };\r\n  }, [uploadedFiles, addedFolders, folderFiles]);\r\n\r\n  const [isCreateFolderPopupOpen, setCreateFolderPopupOpen] = useState(false);\r\n  const [newFolderName, setNewFolderName] = useState(\"\");\r\n\r\n  const [isFileUploadPopupOpen, setFileUploadPopupOpen] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [customFileName, setCustomFileName] = useState(\"\");\r\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\r\n  const [uploadedFilesState, setUploadedFilesState] = useState({});\r\n  const [folderVisibility, setFolderVisibility] = useState({});\r\n\r\n  const handleUploadButtonClick = () => {\r\n    setUploadMenuOpen(!isUploadMenuOpen);\r\n  };\r\n\r\n  const handleFileUploadButtonClick = () => {\r\n    setFileUploadPopupOpen(true);\r\n  };\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    try {\r\n      if (!selectedFile || !selectedFolder) {\r\n        console.error(\"No file selected\");\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"files\", selectedFile);\r\n      formData.append(\"customFileName\", customFileName);\r\n      formData.append(\"selectedFolder\", selectedFolder);\r\n\r\n      formData.append(\"uploadDate\", new Date().toISOString());\r\n      formData.append(\"folderName\", selectedFolder);\r\n\r\n      const response = await axios.post(\"http://localhost:5000/upload_files\", formData);\r\n\r\n      //const data = await response.json();\r\n      console.log(response.data.message);\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n    }\r\n  };\r\n\r\n  // 폴더 필터링\r\n  // 폴더 필터링\r\n  const filteredFolders = addedFolders.filter((folder) =>\r\n    folder.name.toLowerCase().includes(searchKeyword.toLowerCase())\r\n  );\r\n\r\n  \r\n  const handleSearchButtonClick = () => {\r\n    setSearchKeyword(userKeyword);\r\n  };\r\n\r\n  const handleFolderIconClick = async (folderName) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/get_files?folder=${encodeURIComponent(folderName)}`\r\n      );\r\n      const files = response.data;\r\n      console.log(files);\r\n\r\n      // 클릭한 폴더의 가시성을 토글합니다.\r\n      setFolderVisibility((prevVisibility) => ({\r\n        ...prevVisibility,\r\n        [folderName]: !prevVisibility[folderName],\r\n      }));\r\n\r\n      // 파일 목록 상태를 업데이트합니다.\r\n      setFolderFiles((prevFiles) => ({\r\n        ...prevFiles,\r\n        [folderName]: files,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching files:', error);\r\n      // 에러 처리 로직 추가\r\n    }\r\n  };\r\n\r\n  const handleCreateFolderButtonClick = () => {\r\n    setCreateFolderPopupOpen(true);\r\n  };\r\n\r\n  const handleCreateFolder = async () => {\r\n    if (newFolderName.trim() !== \"\") {\r\n      const newFolder = { name: newFolderName, id: Date.now() };\r\n      setAddedFolders((prevFolders) => [...prevFolders, newFolder]);\r\n      localStorage.setItem(\r\n        \"addedFolders\",\r\n        JSON.stringify([...addedFolders, newFolder])\r\n      );\r\n      addFolder(newFolder);\r\n\r\n      // 서버에 새로운 폴더 정보 전송\r\n      try {\r\n        await axios.post(\"http://localhost:5000/create_folder\", {\r\n          folder: newFolder,\r\n        });\r\n      } catch (error) {\r\n        console.error('Error creating folder:', error);\r\n        // 에러 처리 로직 추가\r\n      }\r\n\r\n      setNewFolderName(\"\");\r\n    }\r\n    setCreateFolderPopupOpen(false);\r\n  };\r\n\r\n  const handleRename = () => {\r\n    if (newName.trim() !== \"\") {\r\n      const updatedFolders = addedFolders.map((folder) =>\r\n        folder.id === selectedItem.id ? { ...folder, name: newName } : folder\r\n      );\r\n      setAddedFolders(updatedFolders);\r\n      setRenamePopupOpen(false);\r\n      setSelectedItem(null);\r\n    }\r\n  };\r\n\r\n  const handleMoveToTrash = () => {\r\n    if (newName.trim() !== \"\") {\r\n      const updatedFolders = addedFolders.map((folder) =>\r\n        folder.id === selectedItem.id ? { ...folder, name: newName } : folder\r\n      );\r\n      setAddedFolders(updatedFolders);\r\n      setRenamePopupOpen(false);\r\n      setSelectedItem(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"전체검색창(빠른검색)\"\r\n        className=\"search-input\"\r\n        value={userKeyword}\r\n        onChange={(e) => setUserKeyword(e.target.value)}\r\n      />\r\n      <button onClick={handleSearchButtonClick}>검색</button>\r\n  \r\n      {filteredFoldersAndFiles.map((folder) => (\r\n        <div key={folder.id}>\r\n          <div\r\n            className=\"folder-content\"\r\n            onClick={() => handleFolderIconClick(folder.name)}\r\n          >\r\n            <div className=\"folder-icon img\">\r\n              <img\r\n                src=\"/images/folder-icon.png\"\r\n                alt=\"폴더 아이콘\"\r\n                style={{ width: \"20px\", height: \"20px\" }}\r\n              />\r\n            </div>\r\n            <div className=\"folder-name\">{folder.name}</div>\r\n          </div>\r\n          {folderVisibility[folder.name] && (\r\n            <div className=\"uploaded-files-container\">\r\n              {filteredFiles(folder.name).map((file, index) => (\r\n                <div key={index} className=\"uploaded-file\">\r\n                  <img\r\n                    src=\"/images/file-icon.png\"\r\n                    alt=\"File Icon\"\r\n                    className=\"file-icon\"\r\n                  />\r\n                  <div className=\"file-name\">{file.filename}</div>\r\n                  <div className=\"upload-date\">{file.uploadDate}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n  \r\n\r\n\r\n      <button className=\"upload-button\" onClick={handleUploadButtonClick}>\r\n        <img\r\n          src=\"/images/upload.png\"\r\n          alt=\"업로드 아이콘\"\r\n          style={{ width: \"40px\", height: \"35px\" }}\r\n        />\r\n      </button>\r\n\r\n      {isUploadMenuOpen && (\r\n        <div className=\"upload-menu\">\r\n          <button\r\n            className=\"upload-menu-button\"\r\n            onClick={handleCreateFolderButtonClick}\r\n          >\r\n            폴더 생성\r\n          </button>\r\n          <button\r\n            className=\"upload-menu-button\"\r\n            onClick={handleFileUploadButtonClick}\r\n          >\r\n            파일 업로드\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isCreateFolderPopupOpen && (\r\n        <div className=\"create-folder-popup\">\r\n          <input\r\n            className=\"create-folder-input\"\r\n            type=\"text\"\r\n            placeholder=\"폴더명을 입력하세요\"\r\n            value={newFolderName}\r\n            onChange={(e) => setNewFolderName(e.target.value)}\r\n          />\r\n          <button className=\"create-folder-button\" onClick={handleCreateFolder}>\r\n            폴더 생성\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isFileUploadPopupOpen && (\r\n        <div className=\"file-upload-popup\">\r\n          <input\r\n            className=\"file-upload-input\"\r\n            type=\"file\"\r\n            onChange={handleFileSelect}\r\n          />\r\n          <input\r\n            className=\"file-upload-custom-input\"\r\n            type=\"text\"\r\n            placeholder=\"파일명을 입력하세요\"\r\n            value={customFileName}\r\n            onChange={(e) => setCustomFileName(e.target.value)}\r\n          />\r\n          <select\r\n            className=\"file-upload-select\"\r\n            value={selectedFolder}\r\n            onChange={(e) => setSelectedFolder(e.target.value)}\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select a folder\r\n            </option>\r\n            {addedFolders.map((folder) => (\r\n              <option key={folder.id} value={folder.name}>\r\n                {folder.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button className=\"file-upload-button\" onClick={handleUpload}>\r\n            업로드\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isRenamePopupOpen && (\r\n        <div className=\"rename-popup\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"새로운 이름을 입력하세요\"\r\n            value={newName}\r\n            onChange={(e) => setNewName(e.target.value)}\r\n          />\r\n          <button onClick={handleRename}>이름 변경</button>\r\n          <button onClick={handleMoveToTrash}>휴지통으로 이동</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}