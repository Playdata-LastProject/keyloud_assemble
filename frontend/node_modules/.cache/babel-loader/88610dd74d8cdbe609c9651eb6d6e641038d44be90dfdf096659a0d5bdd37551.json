{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\SPB_Data\\\\keyloud_assemble\\\\frontend\\\\src\\\\components\\\\HomeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/HomeScreen.css\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"../AppContext.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [searchResults, setSearchResults] = useState([]);\n  const {\n    folders,\n    uploadedFiles,\n    addFolder,\n    addFileToFolder,\n    setUploadedFiles\n  } = useContext(AppContext);\n  const [isUploadMenuOpen, setUploadMenuOpen] = useState(false);\n  const [addedFolders, setAddedFolders] = useState([{\n    name: \"최근 업로드 폴더\",\n    id: 1\n  }]);\n  const [userKeyword, setUserKeyword] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [isRenamePopupOpen, setRenamePopupOpen] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  useEffect(() => {\n    // 페이지 로드 시 로컬 스토리지에서 uploadedFiles 값을 가져옴\n    const storedUploadedFiles = localStorage.getItem(\"uploadedFiles\");\n    if (storedUploadedFiles) {\n      setUploadedFiles(JSON.parse(storedUploadedFiles));\n    }\n\n    // 여기서 기본 폴더 정보를 추가합니다.\n    setAddedFolders([{\n      name: \"최근 업로드 폴더\",\n      id: 1\n    }]);\n  }, [setUploadedFiles]);\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      localStorage.setItem(\"uploadedFiles\", JSON.stringify(uploadedFiles));\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [uploadedFiles]);\n  const [isCreateFolderPopupOpen, setCreateFolderPopupOpen] = useState(false);\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [isFileUploadPopupOpen, setFileUploadPopupOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [customFileName, setCustomFileName] = useState(\"\");\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\n  const [uploadedFilesState, setUploadedFilesState] = useState({});\n  const handleUploadButtonClick = () => {\n    setUploadMenuOpen(!isUploadMenuOpen);\n  };\n\n  // 파일 업로드 팝업 열기\n  const handleFileUploadButtonClick = () => {\n    setFileUploadPopupOpen(true);\n  };\n\n  // 파일 선택\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n\n  // 업로드 버튼 클릭 시\n  const handleUpload = async () => {\n    try {\n      if (!selectedFile || !selectedFolder) {\n        console.error(\"No file selected\");\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"files\", selectedFile);\n      formData.append(\"customFileName\", customFileName);\n      formData.append(\"selectedFolder\", selectedFolder);\n      formData.append(\"uploadDate\", new Date().toISOString()); // 파일 업로드 날짜 및 시간\n      formData.append(\"folderName\", selectedFolder); // 폴더명\n\n      const response = await fetch(\"http://localhost:5000/upload_files\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data.message); // 서버로부터 받은 응답 메시지 출력\n\n      // 파일 업로드 후에 필요한 추가적인 작업 수행 가능\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  const handleNavigateToKeywordResult = () => {\n    navigate(`/keyword-result?keyword=${userKeyword}`);\n  };\n  const fetchData = async folderName => {\n    try {\n      const response = await fetch(`http://localhost:5000/get_files?folder=${folderName}`);\n      const data = await response.json();\n      setUploadedFilesState(data.files);\n    } catch (error) {\n      console.error(\"데이터를 불러오는 중 에러 발생:\", error);\n    }\n  };\n  const handleFolderIconClick = folderName => {\n    setUploadMenuOpen(false);\n    fetchData(folderName); // 이곳에서 비동기 함수 호출\n  };\n  const handleCreateFolderButtonClick = () => {\n    setCreateFolderPopupOpen(true);\n  };\n  const handleCreateFolder = () => {\n    if (newFolderName.trim() !== \"\") {\n      const newFolder = {\n        name: newFolderName,\n        id: Date.now()\n      };\n      setAddedFolders(prevFolders => [...prevFolders, newFolder]);\n      addFolder(newFolder);\n      setNewFolderName(\"\");\n    }\n    setCreateFolderPopupOpen(false);\n  };\n  const handleItemClick = item => {\n    setSelectedItem(item);\n    setNewName(item.name);\n  };\n  const handleRename = () => {\n    if (newName.trim() !== \"\") {\n      const updatedFolders = addedFolders.map(folder => folder.id === selectedItem.id ? {\n        ...folder,\n        name: newName\n      } : folder);\n      setAddedFolders(updatedFolders);\n\n      // 파일 수정 로직은 uploadedFiles 상태를 업데이트해야 합니다.\n      // 추가: handleRename 함수 내용을 여기에 추가\n\n      setRenamePopupOpen(false);\n      setSelectedItem(null);\n    }\n  };\n\n  // 수정: handleMoveToTrash 함수 정의\n  const handleMoveToTrash = () => {\n    if (newName.trim() !== \"\") {\n      // handleRename 함수 내용을 여기에 직접 구현\n      const updatedFolders = addedFolders.map(folder => folder.id === selectedItem.id ? {\n        ...folder,\n        name: newName\n      } : folder);\n      setAddedFolders(updatedFolders);\n\n      // 파일 수정 로직은 uploadedFiles 상태를 업데이트해야 합니다.\n      // 추가: handleMoveToTrash 함수 내용을 여기에 추가\n\n      setRenamePopupOpen(false);\n      setSelectedItem(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [addedFolders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-content\",\n        onClick: () => handleFolderIconClick(folder.name),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-icon img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/folder-icon.png\",\n            alt: \"\\uD3F4\\uB354 \\uC544\\uC774\\uCF58\",\n            style: {\n              width: \"20px\",\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-name\",\n          children: folder.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), selectedFolder === folder.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-files-container\",\n        children: Object.keys(uploadedFilesState).map(fileId => {\n          const file = uploadedFilesState[fileId];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploaded-file\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: file.icon,\n              alt: \"File Icon\",\n              className: \"file-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 21\n            }, this)]\n          }, fileId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this)]\n    }, folder.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: handleUploadButtonClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/upload.png\",\n        alt: \"\\uC5C5\\uB85C\\uB4DC \\uC544\\uC774\\uCF58\",\n        style: {\n          width: \"40px\",\n          height: \"35px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), isUploadMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-menu-button\",\n        onClick: handleCreateFolderButtonClick,\n        children: \"\\uD3F4\\uB354 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-menu-button\",\n        onClick: handleFileUploadButtonClick,\n        children: \"\\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), isCreateFolderPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-folder-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"create-folder-input\" // 추가: 클래스 이름 추가\n        ,\n        type: \"text\",\n        placeholder: \"\\uD3F4\\uB354\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-folder-button\",\n        onClick: handleCreateFolder,\n        children: \"\\uD3F4\\uB354 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), isFileUploadPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-upload-input\",\n        type: \"file\",\n        onChange: handleFileSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-upload-custom-input\",\n        type: \"text\",\n        placeholder: \"\\uD30C\\uC77C\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: customFileName,\n        onChange: e => setCustomFileName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"file-upload-select\",\n        value: selectedFolder,\n        onChange: e => setSelectedFolder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), addedFolders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: folder.name,\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"file-upload-button\",\n        onClick: handleUpload,\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), isRenamePopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rename-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC0C8\\uB85C\\uC6B4 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"\\uC774\\uB984 \\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMoveToTrash,\n        children: \"\\uD734\\uC9C0\\uD1B5\\uC73C\\uB85C \\uC774\\uB3D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeScreen, \"ZKcFEFPSbglmqwMUOU95UrjK+uM=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AppContext","useNavigate","jsxDEV","_jsxDEV","HomeScreen","_s","navigate","searchResults","setSearchResults","folders","uploadedFiles","addFolder","addFileToFolder","setUploadedFiles","isUploadMenuOpen","setUploadMenuOpen","addedFolders","setAddedFolders","name","id","userKeyword","setUserKeyword","selectedItem","setSelectedItem","isRenamePopupOpen","setRenamePopupOpen","newName","setNewName","storedUploadedFiles","localStorage","getItem","JSON","parse","handleBeforeUnload","setItem","stringify","window","addEventListener","removeEventListener","isCreateFolderPopupOpen","setCreateFolderPopupOpen","newFolderName","setNewFolderName","isFileUploadPopupOpen","setFileUploadPopupOpen","selectedFile","setSelectedFile","customFileName","setCustomFileName","selectedFolder","setSelectedFolder","uploadedFilesState","setUploadedFilesState","handleUploadButtonClick","handleFileUploadButtonClick","handleFileSelect","event","file","target","files","handleUpload","console","error","formData","FormData","append","Date","toISOString","response","fetch","method","body","data","json","log","message","handleNavigateToKeywordResult","fetchData","folderName","handleFolderIconClick","handleCreateFolderButtonClick","handleCreateFolder","trim","newFolder","now","prevFolders","handleItemClick","item","handleRename","updatedFolders","map","folder","handleMoveToTrash","children","className","onClick","src","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","fileId","icon","type","placeholder","value","onChange","e","disabled","_c","$RefreshReg$"],"sources":["C:/Users/USER/AppData/Roaming/SPB_Data/keyloud_assemble/frontend/src/components/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/HomeScreen.css\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../AppContext.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst HomeScreen = () => {\r\n  const navigate = useNavigate();\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const {\r\n    folders,\r\n    uploadedFiles,\r\n    addFolder,\r\n    addFileToFolder,\r\n    setUploadedFiles,\r\n  } = useContext(AppContext);\r\n  const [isUploadMenuOpen, setUploadMenuOpen] = useState(false);\r\n  const [addedFolders, setAddedFolders] = useState([\r\n    { name: \"최근 업로드 폴더\", id: 1 },\r\n  ]);\r\n  const [userKeyword, setUserKeyword] = useState(\"\");\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isRenamePopupOpen, setRenamePopupOpen] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // 페이지 로드 시 로컬 스토리지에서 uploadedFiles 값을 가져옴\r\n    const storedUploadedFiles = localStorage.getItem(\"uploadedFiles\");\r\n    if (storedUploadedFiles) {\r\n      setUploadedFiles(JSON.parse(storedUploadedFiles));\r\n    }\r\n\r\n    // 여기서 기본 폴더 정보를 추가합니다.\r\n    setAddedFolders([{ name: \"최근 업로드 폴더\", id: 1 }]);\r\n  }, [setUploadedFiles]);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      localStorage.setItem(\"uploadedFiles\", JSON.stringify(uploadedFiles));\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    };\r\n  }, [uploadedFiles]);\r\n\r\n  const [isCreateFolderPopupOpen, setCreateFolderPopupOpen] = useState(false);\r\n  const [newFolderName, setNewFolderName] = useState(\"\");\r\n\r\n  const [isFileUploadPopupOpen, setFileUploadPopupOpen] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [customFileName, setCustomFileName] = useState(\"\");\r\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\r\n  const [uploadedFilesState, setUploadedFilesState] = useState({});\r\n\r\n  const handleUploadButtonClick = () => {\r\n    setUploadMenuOpen(!isUploadMenuOpen);\r\n  };\r\n\r\n  // 파일 업로드 팝업 열기\r\n  const handleFileUploadButtonClick = () => {\r\n    setFileUploadPopupOpen(true);\r\n  };\r\n\r\n  // 파일 선택\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  // 업로드 버튼 클릭 시\r\n  const handleUpload = async () => {\r\n    try {\r\n      if (!selectedFile || !selectedFolder) {\r\n        console.error(\"No file selected\");\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"files\", selectedFile);\r\n      formData.append(\"customFileName\", customFileName);\r\n      formData.append(\"selectedFolder\", selectedFolder);\r\n\r\n      formData.append(\"uploadDate\", new Date().toISOString()); // 파일 업로드 날짜 및 시간\r\n      formData.append(\"folderName\", selectedFolder); // 폴더명\r\n\r\n      const response = await fetch(\"http://localhost:5000/upload_files\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data.message); // 서버로부터 받은 응답 메시지 출력\r\n\r\n      // 파일 업로드 후에 필요한 추가적인 작업 수행 가능\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n    }\r\n  };\r\n\r\n  const handleNavigateToKeywordResult = () => {\r\n    navigate(`/keyword-result?keyword=${userKeyword}`);\r\n  };\r\n\r\n  const fetchData = async (folderName) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/get_files?folder=${folderName}`);\r\n      const data = await response.json();\r\n      setUploadedFilesState(data.files);\r\n    } catch (error) {\r\n      console.error(\"데이터를 불러오는 중 에러 발생:\", error);\r\n    }\r\n  };\r\n\r\n  const handleFolderIconClick = (folderName) => {\r\n    setUploadMenuOpen(false);\r\n    fetchData(folderName); // 이곳에서 비동기 함수 호출\r\n  };\r\n\r\n  const handleCreateFolderButtonClick = () => {\r\n    setCreateFolderPopupOpen(true);\r\n  };\r\n\r\n  const handleCreateFolder = () => {\r\n    if (newFolderName.trim() !== \"\") {\r\n      const newFolder = { name: newFolderName, id: Date.now() };\r\n      setAddedFolders((prevFolders) => [...prevFolders, newFolder]);\r\n      addFolder(newFolder);\r\n      setNewFolderName(\"\");\r\n    }\r\n    setCreateFolderPopupOpen(false);\r\n  };\r\n\r\n  const handleItemClick = (item) => {\r\n    setSelectedItem(item);\r\n    setNewName(item.name);\r\n  };\r\n\r\n  const handleRename = () => {\r\n    if (newName.trim() !== \"\") {\r\n      const updatedFolders = addedFolders.map((folder) =>\r\n        folder.id === selectedItem.id ? { ...folder, name: newName } : folder\r\n      );\r\n      setAddedFolders(updatedFolders);\r\n\r\n      // 파일 수정 로직은 uploadedFiles 상태를 업데이트해야 합니다.\r\n      // 추가: handleRename 함수 내용을 여기에 추가\r\n\r\n      setRenamePopupOpen(false);\r\n      setSelectedItem(null);\r\n    }\r\n  };\r\n\r\n  // 수정: handleMoveToTrash 함수 정의\r\n  const handleMoveToTrash = () => {\r\n    if (newName.trim() !== \"\") {\r\n      // handleRename 함수 내용을 여기에 직접 구현\r\n      const updatedFolders = addedFolders.map((folder) =>\r\n        folder.id === selectedItem.id ? { ...folder, name: newName } : folder\r\n      );\r\n      setAddedFolders(updatedFolders);\r\n\r\n      // 파일 수정 로직은 uploadedFiles 상태를 업데이트해야 합니다.\r\n      // 추가: handleMoveToTrash 함수 내용을 여기에 추가\r\n\r\n      setRenamePopupOpen(false);\r\n      setSelectedItem(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* 폴더 아이콘과 폴더명 세트 */}\r\n      {addedFolders.map((folder) => (\r\n        <div key={folder.id}>\r\n          <div\r\n            className=\"folder-content\"\r\n            onClick={() => handleFolderIconClick(folder.name)}\r\n          >\r\n            <div className=\"folder-icon img\">\r\n              <img\r\n                src=\"/images/folder-icon.png\"\r\n                alt=\"폴더 아이콘\"\r\n                style={{ width: \"20px\", height: \"20px\" }}\r\n              />\r\n            </div>\r\n            <div className=\"folder-name\">{folder.name}</div>\r\n          </div>\r\n          {/* 선택한 폴더일 때만 파일 목록 표시 */}\r\n          {selectedFolder === folder.name && (\r\n            <div className=\"uploaded-files-container\">\r\n              {Object.keys(uploadedFilesState).map((fileId) => {\r\n                const file = uploadedFilesState[fileId];\r\n                return (\r\n                  <div key={fileId} className=\"uploaded-file\">\r\n                    <img src={file.icon} alt=\"File Icon\" className=\"file-icon\" />\r\n                    <div className=\"file-name\">{file.name}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      {/* 업로드 버튼 */}\r\n      <button className=\"upload-button\" onClick={handleUploadButtonClick}>\r\n        <img\r\n          src=\"/images/upload.png\"\r\n          alt=\"업로드 아이콘\"\r\n          style={{ width: \"40px\", height: \"35px\" }}\r\n        />\r\n      </button>\r\n\r\n      {/* 업로드 메뉴 */}\r\n      {isUploadMenuOpen && (\r\n        <div className=\"upload-menu\">\r\n          <button\r\n            className=\"upload-menu-button\"\r\n            onClick={handleCreateFolderButtonClick}\r\n          >\r\n            폴더 생성\r\n          </button>\r\n          <button\r\n            className=\"upload-menu-button\"\r\n            onClick={handleFileUploadButtonClick}\r\n          >\r\n            파일 업로드\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 폴더 생성 팝업 */}\r\n      {isCreateFolderPopupOpen && (\r\n        <div className=\"create-folder-popup\">\r\n          <input\r\n            className=\"create-folder-input\" // 추가: 클래스 이름 추가\r\n            type=\"text\"\r\n            placeholder=\"폴더명을 입력하세요\"\r\n            value={newFolderName}\r\n            onChange={(e) => setNewFolderName(e.target.value)}\r\n          />\r\n          <button className=\"create-folder-button\" onClick={handleCreateFolder}>\r\n            폴더 생성\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 파일 업로드 팝업 */}\r\n      {isFileUploadPopupOpen && (\r\n        <div className=\"file-upload-popup\">\r\n          {/* 파일 선택을 위한 파일 입력란 */}\r\n          <input\r\n            className=\"file-upload-input\"\r\n            type=\"file\"\r\n            onChange={handleFileSelect}\r\n          />\r\n\r\n          {/* 사용자 정의 파일명 입력을 위한 입력란 */}\r\n          <input\r\n            className=\"file-upload-custom-input\"\r\n            type=\"text\"\r\n            placeholder=\"파일명을 입력하세요\"\r\n            value={customFileName}\r\n            onChange={(e) => setCustomFileName(e.target.value)}\r\n          />\r\n\r\n          {/* 폴더 선택을 위한 드롭다운 또는 UI */}\r\n          {/* 폴더를 선택하고 selectedFolder 상태를 업데이트하는 논리 또는 UI를 추가하세요 */}\r\n          <select\r\n            className=\"file-upload-select\"\r\n            value={selectedFolder}\r\n            onChange={(e) => setSelectedFolder(e.target.value)}\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select a folder\r\n            </option>\r\n            {addedFolders.map((folder) => (\r\n              <option key={folder.id} value={folder.name}>\r\n                {folder.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          {/* 업로드 버튼 */}\r\n          <button className=\"file-upload-button\" onClick={handleUpload}>\r\n            업로드\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 팝업창 */}\r\n      {isRenamePopupOpen && (\r\n        <div className=\"rename-popup\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"새로운 이름을 입력하세요\"\r\n            value={newName}\r\n            onChange={(e) => setNewName(e.target.value)}\r\n          />\r\n          {/* 수정: handleRename 함수 호출로 변경 */}\r\n          <button onClick={handleRename}>이름 변경</button>\r\n          {/* 수정: handleMoveToTrash 함수 호출로 변경 */}\r\n          <button onClick={handleMoveToTrash}>휴지통으로 이동</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}