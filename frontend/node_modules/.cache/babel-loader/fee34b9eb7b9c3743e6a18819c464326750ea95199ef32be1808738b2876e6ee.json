{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\SPB_Data\\\\keyloud_assemble\\\\frontend\\\\src\\\\components\\\\HomeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/HomeScreen.css\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"../AppContext.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const handleNavigateToKeywordResult = (navigate, userKeyword) => {\n  console.log(\"Clicked search button\");\n  navigate(`/keyword-result?keyword=${userKeyword}`);\n};\nconst HomeScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [searchResults, setSearchResults] = useState([]);\n  const {\n    folders,\n    uploadedFiles,\n    addFolder,\n    addFileToFolder,\n    setUploadedFiles\n  } = useContext(AppContext);\n  const [isUploadMenuOpen, setUploadMenuOpen] = useState(false);\n  const [addedFolders, setAddedFolders] = useState([{\n    name: \"최근 업로드 폴더\",\n    id: 1\n  }]);\n  const [userKeyword, setUserKeyword] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [isRenamePopupOpen, setRenamePopupOpen] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const [folderFiles, setFolderFiles] = useState({});\n  useEffect(() => {\n    // 페이지 로드 시 로컬 스토리지에서 uploadedFiles 값을 가져옴\n    const storedUploadedFiles = localStorage.getItem(\"uploadedFiles\");\n    if (storedUploadedFiles) {\n      setUploadedFiles(JSON.parse(storedUploadedFiles));\n    }\n\n    // 로컬 스토리지에서 폴더 정보를 가져옴\n    const storedFolders = localStorage.getItem(\"addedFolders\");\n    if (storedFolders) {\n      setAddedFolders(JSON.parse(storedFolders));\n    } else {\n      // 초기 폴더 정보 설정\n      setAddedFolders([{\n        name: \"최근 업로드 폴더\",\n        id: 1\n      }]);\n      localStorage.setItem(\"addedFolders\", JSON.stringify([{\n        name: \"최근 업로드 폴더\",\n        id: 1\n      }]));\n    }\n  }, [setUploadedFiles, setAddedFolders]);\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      localStorage.setItem(\"uploadedFiles\", JSON.stringify(uploadedFiles));\n      localStorage.setItem(\"addedFolders\", JSON.stringify(addedFolders));\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [uploadedFiles, addedFolders]);\n  const [isCreateFolderPopupOpen, setCreateFolderPopupOpen] = useState(false);\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [isFileUploadPopupOpen, setFileUploadPopupOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [customFileName, setCustomFileName] = useState(\"\");\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\n  const [uploadedFilesState, setUploadedFilesState] = useState({});\n  const [folderVisibility, setFolderVisibility] = useState({});\n  const handleUploadButtonClick = () => {\n    setUploadMenuOpen(!isUploadMenuOpen);\n  };\n  const handleFileUploadButtonClick = () => {\n    setFileUploadPopupOpen(true);\n  };\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n  const handleUpload = async () => {\n    try {\n      if (!selectedFile || !selectedFolder) {\n        console.error(\"No file selected\");\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"files\", selectedFile);\n      formData.append(\"customFileName\", customFileName);\n      formData.append(\"selectedFolder\", selectedFolder);\n      formData.append(\"uploadDate\", new Date().toISOString());\n      formData.append(\"folderName\", selectedFolder);\n      const response = await axios.post(\"http://localhost:5000/upload_files\", formData);\n      const data = await response.json();\n      console.log(response.data.message);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  const handleNavigateToKeywordResult = () => {\n    // Use the exported function with appropriate arguments\n    handleNavigateToKeywordResult(navigate, userKeyword);\n  };\n  const handleFolderIconClick = async folderName => {\n    try {\n      const response = await axios.get(`http://localhost:5000/get_files?folder=${encodeURIComponent(folderName)}`);\n      const files = response.data;\n      console.log(files);\n\n      // 클릭한 폴더의 가시성을 토글합니다.\n      setFolderVisibility(prevVisibility => ({\n        ...prevVisibility,\n        [folderName]: !prevVisibility[folderName]\n      }));\n\n      // 파일 목록 상태를 업데이트합니다.\n      setFolderFiles(prevFiles => ({\n        ...prevFiles,\n        [folderName]: files\n      }));\n    } catch (error) {\n      console.error('Error fetching files:', error);\n      // 에러 처리 로직 추가\n    }\n  };\n  const handleCreateFolderButtonClick = () => {\n    setCreateFolderPopupOpen(true);\n  };\n  const handleCreateFolder = async () => {\n    if (newFolderName.trim() !== \"\") {\n      const newFolder = {\n        name: newFolderName,\n        id: Date.now()\n      };\n      setAddedFolders(prevFolders => [...prevFolders, newFolder]);\n      localStorage.setItem(\"addedFolders\", JSON.stringify([...addedFolders, newFolder]));\n      addFolder(newFolder);\n\n      // 서버에 새로운 폴더 정보 전송\n      try {\n        await axios.post(\"http://localhost:5000/create_folder\", {\n          folder: newFolder\n        });\n      } catch (error) {\n        console.error('Error creating folder:', error);\n        // 에러 처리 로직 추가\n      }\n      setNewFolderName(\"\");\n    }\n    setCreateFolderPopupOpen(false);\n  };\n  const filteredFolders = addedFolders.filter(folder => folder.name.includes(userKeyword));\n  const filteredFiles = Object.keys(folderFiles).reduce((result, folderName) => {\n    const filesInFolder = folderFiles[folderName].filter(file => file.filename.includes(userKeyword));\n    if (filesInFolder.length > 0) {\n      result[folderName] = filesInFolder;\n    }\n    return result;\n  }, {});\n  const handleItemClick = item => {\n    setSelectedItem(item);\n    setNewName(item.name);\n  };\n  const handleRename = () => {\n    if (newName.trim() !== \"\") {\n      const updatedFolders = addedFolders.map(folder => folder.id === selectedItem.id ? {\n        ...folder,\n        name: newName\n      } : folder);\n      setAddedFolders(updatedFolders);\n      setRenamePopupOpen(false);\n      setSelectedItem(null);\n    }\n  };\n  const handleMoveToTrash = () => {\n    if (newName.trim() !== \"\") {\n      const updatedFolders = addedFolders.map(folder => folder.id === selectedItem.id ? {\n        ...folder,\n        name: newName\n      } : folder);\n      setAddedFolders(updatedFolders);\n      setRenamePopupOpen(false);\n      setSelectedItem(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [filteredFolders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"folder-content\",\n        onClick: () => handleFolderIconClick(folder.name),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-icon img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/folder-icon.png\",\n            alt: \"\\uD3F4\\uB354 \\uC544\\uC774\\uCF58\",\n            style: {\n              width: \"20px\",\n              height: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-name\",\n          children: folder.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), folderVisibility[folder.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-files-container\",\n        children: filteredFiles[folder.name] && filteredFiles[folder.name].map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-file\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/file-icon.png\",\n            alt: \"File Icon\",\n            className: \"file-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-name\",\n            children: file.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-date\",\n            children: file.uploadDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this)]\n    }, folder.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: handleUploadButtonClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/upload.png\",\n        alt: \"\\uC5C5\\uB85C\\uB4DC \\uC544\\uC774\\uCF58\",\n        style: {\n          width: \"40px\",\n          height: \"35px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), isUploadMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-menu-button\",\n        onClick: handleCreateFolderButtonClick,\n        children: \"\\uD3F4\\uB354 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-menu-button\",\n        onClick: handleFileUploadButtonClick,\n        children: \"\\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), isCreateFolderPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-folder-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"create-folder-input\",\n        type: \"text\",\n        placeholder: \"\\uD3F4\\uB354\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-folder-button\",\n        onClick: handleCreateFolder,\n        children: \"\\uD3F4\\uB354 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this), isFileUploadPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-upload-input\",\n        type: \"file\",\n        onChange: handleFileSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-upload-custom-input\",\n        type: \"text\",\n        placeholder: \"\\uD30C\\uC77C\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: customFileName,\n        onChange: e => setCustomFileName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"file-upload-select\",\n        value: selectedFolder,\n        onChange: e => setSelectedFolder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), addedFolders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: folder.name,\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"file-upload-button\",\n        onClick: handleUpload,\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), isRenamePopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rename-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC0C8\\uB85C\\uC6B4 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"\\uC774\\uB984 \\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMoveToTrash,\n        children: \"\\uD734\\uC9C0\\uD1B5\\uC73C\\uB85C \\uC774\\uB3D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeScreen, \"QIIBvU1yUBaARRY+NnxLS4JXvuU=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AppContext","useNavigate","axios","jsxDEV","_jsxDEV","handleNavigateToKeywordResult","navigate","userKeyword","console","log","HomeScreen","_s","searchResults","setSearchResults","folders","uploadedFiles","addFolder","addFileToFolder","setUploadedFiles","isUploadMenuOpen","setUploadMenuOpen","addedFolders","setAddedFolders","name","id","setUserKeyword","selectedItem","setSelectedItem","isRenamePopupOpen","setRenamePopupOpen","newName","setNewName","folderFiles","setFolderFiles","storedUploadedFiles","localStorage","getItem","JSON","parse","storedFolders","setItem","stringify","handleBeforeUnload","window","addEventListener","removeEventListener","isCreateFolderPopupOpen","setCreateFolderPopupOpen","newFolderName","setNewFolderName","isFileUploadPopupOpen","setFileUploadPopupOpen","selectedFile","setSelectedFile","customFileName","setCustomFileName","selectedFolder","setSelectedFolder","uploadedFilesState","setUploadedFilesState","folderVisibility","setFolderVisibility","handleUploadButtonClick","handleFileUploadButtonClick","handleFileSelect","event","file","target","files","handleUpload","error","formData","FormData","append","Date","toISOString","response","post","data","json","message","handleFolderIconClick","folderName","get","encodeURIComponent","prevVisibility","prevFiles","handleCreateFolderButtonClick","handleCreateFolder","trim","newFolder","now","prevFolders","folder","filteredFolders","filter","includes","filteredFiles","Object","keys","reduce","result","filesInFolder","filename","length","handleItemClick","item","handleRename","updatedFolders","map","handleMoveToTrash","children","className","onClick","src","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","index","uploadDate","type","placeholder","value","onChange","e","disabled","_c","$RefreshReg$"],"sources":["C:/Users/USER/AppData/Roaming/SPB_Data/keyloud_assemble/frontend/src/components/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/HomeScreen.css\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../AppContext.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport const handleNavigateToKeywordResult = (navigate, userKeyword) => {\r\n  console.log(\"Clicked search button\");\r\n  navigate(`/keyword-result?keyword=${userKeyword}`);\r\n};\r\n\r\n\r\nconst HomeScreen = () => {\r\n  const navigate = useNavigate();\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const {\r\n    folders,\r\n    uploadedFiles,\r\n    addFolder,\r\n    addFileToFolder,\r\n    setUploadedFiles,\r\n  } = useContext(AppContext);\r\n  const [isUploadMenuOpen, setUploadMenuOpen] = useState(false);\r\n  const [addedFolders, setAddedFolders] = useState([\r\n    { name: \"최근 업로드 폴더\", id: 1 },\r\n  ]);\r\n  const [userKeyword, setUserKeyword] = useState(\"\");\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isRenamePopupOpen, setRenamePopupOpen] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [folderFiles, setFolderFiles] = useState({});\r\n\r\n\r\n  useEffect(() => {\r\n    // 페이지 로드 시 로컬 스토리지에서 uploadedFiles 값을 가져옴\r\n    const storedUploadedFiles = localStorage.getItem(\"uploadedFiles\");\r\n    if (storedUploadedFiles) {\r\n      setUploadedFiles(JSON.parse(storedUploadedFiles));\r\n    }\r\n\r\n    // 로컬 스토리지에서 폴더 정보를 가져옴\r\n    const storedFolders = localStorage.getItem(\"addedFolders\");\r\n    if (storedFolders) {\r\n      setAddedFolders(JSON.parse(storedFolders));\r\n    } else {\r\n      // 초기 폴더 정보 설정\r\n      setAddedFolders([{ name: \"최근 업로드 폴더\", id: 1 }]);\r\n      localStorage.setItem(\"addedFolders\", JSON.stringify([{ name: \"최근 업로드 폴더\", id: 1 }]));\r\n    }\r\n  }, [setUploadedFiles, setAddedFolders]);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      localStorage.setItem(\"uploadedFiles\", JSON.stringify(uploadedFiles));\r\n      localStorage.setItem(\"addedFolders\", JSON.stringify(addedFolders));\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    };\r\n  }, [uploadedFiles, addedFolders]);\r\n\r\n  const [isCreateFolderPopupOpen, setCreateFolderPopupOpen] = useState(false);\r\n  const [newFolderName, setNewFolderName] = useState(\"\");\r\n\r\n  const [isFileUploadPopupOpen, setFileUploadPopupOpen] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [customFileName, setCustomFileName] = useState(\"\");\r\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\r\n  const [uploadedFilesState, setUploadedFilesState] = useState({});\r\n  const [folderVisibility, setFolderVisibility] = useState({});\r\n\r\n  const handleUploadButtonClick = () => {\r\n    setUploadMenuOpen(!isUploadMenuOpen);\r\n  };\r\n\r\n  const handleFileUploadButtonClick = () => {\r\n    setFileUploadPopupOpen(true);\r\n  };\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    try {\r\n      if (!selectedFile || !selectedFolder) {\r\n        console.error(\"No file selected\");\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"files\", selectedFile);\r\n      formData.append(\"customFileName\", customFileName);\r\n      formData.append(\"selectedFolder\", selectedFolder);\r\n\r\n      formData.append(\"uploadDate\", new Date().toISOString());\r\n      formData.append(\"folderName\", selectedFolder);\r\n\r\n      const response = await axios.post(\"http://localhost:5000/upload_files\", formData);\r\n\r\n      const data = await response.json();\r\n      console.log(response.data.message);\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n    }\r\n  };\r\n\r\n  const handleNavigateToKeywordResult = () => {\r\n    // Use the exported function with appropriate arguments\r\n    handleNavigateToKeywordResult(navigate, userKeyword);\r\n  };\r\n\r\n  const handleFolderIconClick = async (folderName) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/get_files?folder=${encodeURIComponent(folderName)}`);\r\n      const files = response.data;\r\n      console.log(files);\r\n\r\n      // 클릭한 폴더의 가시성을 토글합니다.\r\n      setFolderVisibility((prevVisibility) => ({\r\n        ...prevVisibility,\r\n        [folderName]: !prevVisibility[folderName],\r\n      }));\r\n      \r\n      // 파일 목록 상태를 업데이트합니다.\r\n      setFolderFiles((prevFiles) => ({\r\n        ...prevFiles,\r\n        [folderName]: files,\r\n      }));\r\n    } catch (error) {\r\n      console.error('Error fetching files:', error);\r\n      // 에러 처리 로직 추가\r\n    }\r\n  };\r\n  \r\n  const handleCreateFolderButtonClick = () => {\r\n    setCreateFolderPopupOpen(true);\r\n  };\r\n\r\n  const handleCreateFolder = async () => {\r\n    if (newFolderName.trim() !== \"\") {\r\n      const newFolder = { name: newFolderName, id: Date.now() };\r\n      setAddedFolders((prevFolders) => [...prevFolders, newFolder]);\r\n      localStorage.setItem(\"addedFolders\", JSON.stringify([...addedFolders, newFolder]));\r\n      addFolder(newFolder);\r\n\r\n      // 서버에 새로운 폴더 정보 전송\r\n      try {\r\n        await axios.post(\"http://localhost:5000/create_folder\", { folder: newFolder });\r\n      } catch (error) {\r\n        console.error('Error creating folder:', error);\r\n        // 에러 처리 로직 추가\r\n      }\r\n\r\n      setNewFolderName(\"\");\r\n    }\r\n    setCreateFolderPopupOpen(false);\r\n  };\r\n\r\n  const filteredFolders = addedFolders.filter((folder) =>\r\n    folder.name.includes(userKeyword)\r\n  );\r\n\r\n  const filteredFiles = Object.keys(folderFiles).reduce((result, folderName) => {\r\n    const filesInFolder = folderFiles[folderName].filter((file) =>\r\n      file.filename.includes(userKeyword)\r\n    );\r\n\r\n    if (filesInFolder.length > 0) {\r\n      result[folderName] = filesInFolder;\r\n    }\r\n\r\n    return result;\r\n  }, {});\r\n\r\n  const handleItemClick = (item) => {\r\n    setSelectedItem(item);\r\n    setNewName(item.name);\r\n  };\r\n\r\n  const handleRename = () => {\r\n    if (newName.trim() !== \"\") {\r\n      const updatedFolders = addedFolders.map((folder) =>\r\n        folder.id === selectedItem.id ? { ...folder, name: newName } : folder\r\n      );\r\n      setAddedFolders(updatedFolders);\r\n      setRenamePopupOpen(false);\r\n      setSelectedItem(null);\r\n    }\r\n  };\r\n\r\n  const handleMoveToTrash = () => {\r\n    if (newName.trim() !== \"\") {\r\n      const updatedFolders = addedFolders.map((folder) =>\r\n        folder.id === selectedItem.id ? { ...folder, name: newName } : folder\r\n      );\r\n      setAddedFolders(updatedFolders);\r\n      setRenamePopupOpen(false);\r\n      setSelectedItem(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {filteredFolders.map((folder) => (\r\n        <div key={folder.id}>\r\n          <div\r\n            className=\"folder-content\"\r\n            onClick={() => handleFolderIconClick(folder.name)}\r\n          >\r\n            <div className=\"folder-icon img\">\r\n              <img\r\n                src=\"/images/folder-icon.png\"\r\n                alt=\"폴더 아이콘\"\r\n                style={{ width: \"20px\", height: \"20px\" }}\r\n              />\r\n            </div>\r\n            <div className=\"folder-name\">{folder.name}</div>\r\n          </div>\r\n          {folderVisibility[folder.name] && (\r\n            <div className=\"uploaded-files-container\">\r\n              {filteredFiles[folder.name] &&\r\n                filteredFiles[folder.name].map((file, index) => (\r\n                  <div key={index} className=\"uploaded-file\">\r\n                    <img\r\n                      src=\"/images/file-icon.png\"\r\n                      alt=\"File Icon\"\r\n                      className=\"file-icon\"\r\n                    />\r\n                    <div className=\"file-name\">{file.filename}</div>\r\n                    <div className=\"upload-date\">{file.uploadDate}</div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n  \r\n      <button className=\"upload-button\" onClick={handleUploadButtonClick}>\r\n        <img\r\n          src=\"/images/upload.png\"\r\n          alt=\"업로드 아이콘\"\r\n          style={{ width: \"40px\", height: \"35px\" }}\r\n        />\r\n      </button>\r\n  \r\n      {isUploadMenuOpen && (\r\n        <div className=\"upload-menu\">\r\n          <button\r\n            className=\"upload-menu-button\"\r\n            onClick={handleCreateFolderButtonClick}\r\n          >\r\n            폴더 생성\r\n          </button>\r\n          <button\r\n            className=\"upload-menu-button\"\r\n            onClick={handleFileUploadButtonClick}\r\n          >\r\n            파일 업로드\r\n          </button>\r\n        </div>\r\n      )}\r\n  \r\n      {isCreateFolderPopupOpen && (\r\n        <div className=\"create-folder-popup\">\r\n          <input\r\n            className=\"create-folder-input\"\r\n            type=\"text\"\r\n            placeholder=\"폴더명을 입력하세요\"\r\n            value={newFolderName}\r\n            onChange={(e) => setNewFolderName(e.target.value)}\r\n          />\r\n          <button className=\"create-folder-button\" onClick={handleCreateFolder}>\r\n            폴더 생성\r\n          </button>\r\n        </div>\r\n      )}\r\n  \r\n      {isFileUploadPopupOpen && (\r\n        <div className=\"file-upload-popup\">\r\n          <input\r\n            className=\"file-upload-input\"\r\n            type=\"file\"\r\n            onChange={handleFileSelect}\r\n          />\r\n          <input\r\n            className=\"file-upload-custom-input\"\r\n            type=\"text\"\r\n            placeholder=\"파일명을 입력하세요\"\r\n            value={customFileName}\r\n            onChange={(e) => setCustomFileName(e.target.value)}\r\n          />\r\n          <select\r\n            className=\"file-upload-select\"\r\n            value={selectedFolder}\r\n            onChange={(e) => setSelectedFolder(e.target.value)}\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select a folder\r\n            </option>\r\n            {addedFolders.map((folder) => (\r\n              <option key={folder.id} value={folder.name}>\r\n                {folder.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button className=\"file-upload-button\" onClick={handleUpload}>\r\n            업로드\r\n          </button>\r\n        </div>\r\n      )}\r\n  \r\n      {isRenamePopupOpen && (\r\n        <div className=\"rename-popup\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"새로운 이름을 입력하세요\"\r\n            value={newName}\r\n            onChange={(e) => setNewName(e.target.value)}\r\n          />\r\n          <button onClick={handleRename}>이름 변경</button>\r\n          <button onClick={handleMoveToTrash}>휴지통으로 이동</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}