{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\SPB_Data\\\\keyloud_assemble\\\\frontend\\\\src\\\\components\\\\HomeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/HomeScreen.css\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"../AppContext.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [searchResults, setSearchResults] = useState([]);\n  const {\n    folders,\n    uploadedFiles,\n    addFolder,\n    addFileToFolder,\n    setUploadedFiles\n  } = useContext(AppContext);\n  const [isUploadMenuOpen, setUploadMenuOpen] = useState(false);\n  const [addedFolders, setAddedFolders] = useState([{\n    name: \"최근 업로드 폴더\",\n    id: 1\n  }]);\n  const [userKeyword, setUserKeyword] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [isRenamePopupOpen, setRenamePopupOpen] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  useEffect(() => {\n    // 페이지 로드 시 로컬 스토리지에서 uploadedFiles 값을 가져옴\n    const storedUploadedFiles = localStorage.getItem(\"uploadedFiles\");\n    if (storedUploadedFiles) {\n      setUploadedFiles(JSON.parse(storedUploadedFiles));\n    }\n\n    // 로컬 스토리지에서 폴더 정보를 가져옴\n    const storedFolders = localStorage.getItem(\"addedFolders\");\n    if (storedFolders) {\n      setAddedFolders(JSON.parse(storedFolders));\n    } else {\n      // 초기 폴더 정보 설정\n      setAddedFolders([{\n        name: \"최근 업로드 폴더\",\n        id: 1\n      }]);\n      localStorage.setItem(\"addedFolders\", JSON.stringify(addedFolders));\n    }\n  }, [setUploadedFiles, addedFolders]);\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      localStorage.setItem(\"uploadedFiles\", JSON.stringify(uploadedFiles));\n      localStorage.setItem(\"addedFolders\", JSON.stringify(addedFolders));\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [uploadedFiles, addedFolders]);\n  const [isCreateFolderPopupOpen, setCreateFolderPopupOpen] = useState(false);\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [isFileUploadPopupOpen, setFileUploadPopupOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [customFileName, setCustomFileName] = useState(\"\");\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\n  const [uploadedFilesState, setUploadedFilesState] = useState({});\n  const handleUploadButtonClick = () => {\n    setUploadMenuOpen(!isUploadMenuOpen);\n  };\n  const handleFileUploadButtonClick = () => {\n    setFileUploadPopupOpen(true);\n  };\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n  const fetchFilesByFolder = async folderName => {\n    try {\n      const response = await fetch(`http://localhost:5000/keyword_search?folder=${folderName}`);\n      const data = await response.json();\n      setSearchResults(data);\n    } catch (error) {\n      console.error(\"파일을 가져오는 중 오류 발생:\", error);\n    }\n  };\n  const handleUpload = async () => {\n    try {\n      if (!selectedFile || !selectedFolder) {\n        console.error(\"No file selected\");\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"files\", selectedFile);\n      formData.append(\"customFileName\", customFileName);\n      formData.append(\"selectedFolder\", selectedFolder);\n      formData.append(\"uploadDate\", new Date().toISOString());\n      formData.append(\"folderName\", selectedFolder);\n      const response = await fetch(\"http://localhost:5000/upload_files\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      console.log(data.message);\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n    }\n  };\n  const handleNavigateToKeywordResult = () => {\n    navigate(`/keyword-result?keyword=${userKeyword}`);\n  };\n  const handleFolderIconClick = folderName => {\n    setUploadMenuOpen(false);\n    fetchFilesByFolder(folderName);\n  };\n  const handleCreateFolderButtonClick = () => {\n    setCreateFolderPopupOpen(true);\n  };\n  const handleCreateFolder = () => {\n    if (newFolderName.trim() !== \"\") {\n      const newFolder = {\n        name: newFolderName,\n        id: Date.now()\n      };\n      setAddedFolders(prevFolders => [...prevFolders, newFolder]);\n      localStorage.setItem(\"addedFolders\", JSON.stringify([...addedFolders, newFolder]));\n      addFolder(newFolder);\n      setNewFolderName(\"\");\n    }\n    setCreateFolderPopupOpen(false);\n  };\n  const handleItemClick = item => {\n    setSelectedItem(item);\n    setNewName(item.name);\n  };\n  const handleRename = () => {\n    if (newName.trim() !== \"\") {\n      const updatedFolders = addedFolders.map(folder => folder.id === selectedItem.id ? {\n        ...folder,\n        name: newName\n      } : folder);\n      setAddedFolders(updatedFolders);\n      setRenamePopupOpen(false);\n      setSelectedItem(null);\n    }\n  };\n  const handleMoveToTrash = () => {\n    if (newName.trim() !== \"\") {\n      const updatedFolders = addedFolders.map(folder => folder.id === selectedItem.id ? {\n        ...folder,\n        name: newName\n      } : folder);\n      setAddedFolders(updatedFolders);\n      setRenamePopupOpen(false);\n      setSelectedItem(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [addedFolders.map(folder => {\n      var _uploadedFiles$folder;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-content\",\n          onClick: () => handleFolderIconClick(folder.name),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-icon img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/folder-icon.png\",\n              alt: \"\\uD3F4\\uB354 \\uC544\\uC774\\uCF58\",\n              style: {\n                width: \"20px\",\n                height: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-name\",\n            children: folder.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-files-container\",\n          children: (_uploadedFiles$folder = uploadedFiles[folder.name]) === null || _uploadedFiles$folder === void 0 ? void 0 : _uploadedFiles$folder.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploaded-file\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: file.icon,\n              alt: \"File Icon\",\n              className: \"file-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, folder.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: handleUploadButtonClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/upload.png\",\n        alt: \"\\uC5C5\\uB85C\\uB4DC \\uC544\\uC774\\uCF58\",\n        style: {\n          width: \"40px\",\n          height: \"35px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), isUploadMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-menu-button\",\n        onClick: handleCreateFolderButtonClick,\n        children: \"\\uD3F4\\uB354 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-menu-button\",\n        onClick: handleFileUploadButtonClick,\n        children: \"\\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), isCreateFolderPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-folder-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"create-folder-input\",\n        type: \"text\",\n        placeholder: \"\\uD3F4\\uB354\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-folder-button\",\n        onClick: handleCreateFolder,\n        children: \"\\uD3F4\\uB354 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this), isFileUploadPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-upload-input\",\n        type: \"file\",\n        onChange: handleFileSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-upload-custom-input\",\n        type: \"text\",\n        placeholder: \"\\uD30C\\uC77C\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: customFileName,\n        onChange: e => setCustomFileName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"file-upload-select\",\n        value: selectedFolder,\n        onChange: e => setSelectedFolder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), addedFolders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: folder.name,\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"file-upload-button\",\n        onClick: handleUpload,\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), isRenamePopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rename-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC0C8\\uB85C\\uC6B4 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"\\uC774\\uB984 \\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMoveToTrash,\n        children: \"\\uD734\\uC9C0\\uD1B5\\uC73C\\uB85C \\uC774\\uB3D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeScreen, \"ZKcFEFPSbglmqwMUOU95UrjK+uM=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AppContext","useNavigate","jsxDEV","_jsxDEV","HomeScreen","_s","navigate","searchResults","setSearchResults","folders","uploadedFiles","addFolder","addFileToFolder","setUploadedFiles","isUploadMenuOpen","setUploadMenuOpen","addedFolders","setAddedFolders","name","id","userKeyword","setUserKeyword","selectedItem","setSelectedItem","isRenamePopupOpen","setRenamePopupOpen","newName","setNewName","storedUploadedFiles","localStorage","getItem","JSON","parse","storedFolders","setItem","stringify","handleBeforeUnload","window","addEventListener","removeEventListener","isCreateFolderPopupOpen","setCreateFolderPopupOpen","newFolderName","setNewFolderName","isFileUploadPopupOpen","setFileUploadPopupOpen","selectedFile","setSelectedFile","customFileName","setCustomFileName","selectedFolder","setSelectedFolder","uploadedFilesState","setUploadedFilesState","handleUploadButtonClick","handleFileUploadButtonClick","handleFileSelect","event","file","target","files","fetchFilesByFolder","folderName","response","fetch","data","json","error","console","handleUpload","formData","FormData","append","Date","toISOString","method","body","log","message","handleNavigateToKeywordResult","handleFolderIconClick","handleCreateFolderButtonClick","handleCreateFolder","trim","newFolder","now","prevFolders","handleItemClick","item","handleRename","updatedFolders","map","folder","handleMoveToTrash","children","_uploadedFiles$folder","className","onClick","src","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","index","icon","type","placeholder","value","onChange","e","disabled","_c","$RefreshReg$"],"sources":["C:/Users/USER/AppData/Roaming/SPB_Data/keyloud_assemble/frontend/src/components/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/HomeScreen.css\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../AppContext.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst HomeScreen = () => {\r\n  const navigate = useNavigate();\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const {\r\n    folders,\r\n    uploadedFiles,\r\n    addFolder,\r\n    addFileToFolder,\r\n    setUploadedFiles,\r\n  } = useContext(AppContext);\r\n  const [isUploadMenuOpen, setUploadMenuOpen] = useState(false);\r\n  const [addedFolders, setAddedFolders] = useState([\r\n    { name: \"최근 업로드 폴더\", id: 1 },\r\n  ]);\r\n  const [userKeyword, setUserKeyword] = useState(\"\");\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isRenamePopupOpen, setRenamePopupOpen] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // 페이지 로드 시 로컬 스토리지에서 uploadedFiles 값을 가져옴\r\n    const storedUploadedFiles = localStorage.getItem(\"uploadedFiles\");\r\n    if (storedUploadedFiles) {\r\n      setUploadedFiles(JSON.parse(storedUploadedFiles));\r\n    }\r\n\r\n    // 로컬 스토리지에서 폴더 정보를 가져옴\r\n    const storedFolders = localStorage.getItem(\"addedFolders\");\r\n    if (storedFolders) {\r\n      setAddedFolders(JSON.parse(storedFolders));\r\n    } else {\r\n      // 초기 폴더 정보 설정\r\n      setAddedFolders([{ name: \"최근 업로드 폴더\", id: 1 }]);\r\n      localStorage.setItem(\"addedFolders\", JSON.stringify(addedFolders));\r\n    }\r\n  }, [setUploadedFiles, addedFolders]);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      localStorage.setItem(\"uploadedFiles\", JSON.stringify(uploadedFiles));\r\n      localStorage.setItem(\"addedFolders\", JSON.stringify(addedFolders));\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    };\r\n  }, [uploadedFiles, addedFolders]);\r\n\r\n  const [isCreateFolderPopupOpen, setCreateFolderPopupOpen] = useState(false);\r\n  const [newFolderName, setNewFolderName] = useState(\"\");\r\n\r\n  const [isFileUploadPopupOpen, setFileUploadPopupOpen] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [customFileName, setCustomFileName] = useState(\"\");\r\n  const [selectedFolder, setSelectedFolder] = useState(\"\");\r\n  const [uploadedFilesState, setUploadedFilesState] = useState({});\r\n\r\n  const handleUploadButtonClick = () => {\r\n    setUploadMenuOpen(!isUploadMenuOpen);\r\n  };\r\n\r\n  const handleFileUploadButtonClick = () => {\r\n    setFileUploadPopupOpen(true);\r\n  };\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const fetchFilesByFolder = async (folderName) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/keyword_search?folder=${folderName}`);\r\n      const data = await response.json();\r\n      setSearchResults(data);\r\n    } catch (error) {\r\n      console.error(\"파일을 가져오는 중 오류 발생:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    try {\r\n      if (!selectedFile || !selectedFolder) {\r\n        console.error(\"No file selected\");\r\n        return;\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"files\", selectedFile);\r\n      formData.append(\"customFileName\", customFileName);\r\n      formData.append(\"selectedFolder\", selectedFolder);\r\n\r\n      formData.append(\"uploadDate\", new Date().toISOString());\r\n      formData.append(\"folderName\", selectedFolder);\r\n\r\n      const response = await fetch(\"http://localhost:5000/upload_files\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(data.message);\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n    }\r\n  };\r\n\r\n  const handleNavigateToKeywordResult = () => {\r\n    navigate(`/keyword-result?keyword=${userKeyword}`);\r\n  };\r\n\r\n  const handleFolderIconClick = (folderName) => {\r\n    setUploadMenuOpen(false);\r\n    fetchFilesByFolder(folderName);\r\n  };\r\n\r\n  const handleCreateFolderButtonClick = () => {\r\n    setCreateFolderPopupOpen(true);\r\n  };\r\n\r\n  const handleCreateFolder = () => {\r\n    if (newFolderName.trim() !== \"\") {\r\n      const newFolder = { name: newFolderName, id: Date.now() };\r\n      setAddedFolders((prevFolders) => [...prevFolders, newFolder]);\r\n      localStorage.setItem(\"addedFolders\", JSON.stringify([...addedFolders, newFolder]));\r\n      addFolder(newFolder);\r\n      setNewFolderName(\"\");\r\n    }\r\n    setCreateFolderPopupOpen(false);\r\n  };\r\n\r\n  const handleItemClick = (item) => {\r\n    setSelectedItem(item);\r\n    setNewName(item.name);\r\n  };\r\n\r\n  const handleRename = () => {\r\n    if (newName.trim() !== \"\") {\r\n      const updatedFolders = addedFolders.map((folder) =>\r\n        folder.id === selectedItem.id ? { ...folder, name: newName } : folder\r\n      );\r\n      setAddedFolders(updatedFolders);\r\n      setRenamePopupOpen(false);\r\n      setSelectedItem(null);\r\n    }\r\n  };\r\n\r\n  const handleMoveToTrash = () => {\r\n    if (newName.trim() !== \"\") {\r\n      const updatedFolders = addedFolders.map((folder) =>\r\n        folder.id === selectedItem.id ? { ...folder, name: newName } : folder\r\n      );\r\n      setAddedFolders(updatedFolders);\r\n      setRenamePopupOpen(false);\r\n      setSelectedItem(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {addedFolders.map((folder) => (\r\n        <div key={folder.id}>\r\n          <div\r\n            className=\"folder-content\"\r\n            onClick={() => handleFolderIconClick(folder.name)}\r\n          >\r\n            <div className=\"folder-icon img\">\r\n              <img\r\n                src=\"/images/folder-icon.png\"\r\n                alt=\"폴더 아이콘\"\r\n                style={{ width: \"20px\", height: \"20px\" }}\r\n              />\r\n            </div>\r\n            <div className=\"folder-name\">{folder.name}</div>\r\n          </div>\r\n          <div className=\"uploaded-files-container\">\r\n            {uploadedFiles[folder.name]?.map((file, index) => (\r\n              <div key={index} className=\"uploaded-file\">\r\n                <img src={file.icon} alt=\"File Icon\" className=\"file-icon\" />\r\n                <div className=\"file-name\">{file.name}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <button className=\"upload-button\" onClick={handleUploadButtonClick}>\r\n        <img\r\n          src=\"/images/upload.png\"\r\n          alt=\"업로드 아이콘\"\r\n          style={{ width: \"40px\", height: \"35px\" }}\r\n        />\r\n      </button>\r\n\r\n      {isUploadMenuOpen && (\r\n        <div className=\"upload-menu\">\r\n          <button\r\n            className=\"upload-menu-button\"\r\n            onClick={handleCreateFolderButtonClick}\r\n          >\r\n            폴더 생성\r\n          </button>\r\n          <button\r\n            className=\"upload-menu-button\"\r\n            onClick={handleFileUploadButtonClick}\r\n          >\r\n            파일 업로드\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isCreateFolderPopupOpen && (\r\n        <div className=\"create-folder-popup\">\r\n          <input\r\n            className=\"create-folder-input\"\r\n            type=\"text\"\r\n            placeholder=\"폴더명을 입력하세요\"\r\n            value={newFolderName}\r\n            onChange={(e) => setNewFolderName(e.target.value)}\r\n          />\r\n          <button className=\"create-folder-button\" onClick={handleCreateFolder}>\r\n            폴더 생성\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isFileUploadPopupOpen && (\r\n        <div className=\"file-upload-popup\">\r\n          <input\r\n            className=\"file-upload-input\"\r\n            type=\"file\"\r\n            onChange={handleFileSelect}\r\n          />\r\n          <input\r\n            className=\"file-upload-custom-input\"\r\n            type=\"text\"\r\n            placeholder=\"파일명을 입력하세요\"\r\n            value={customFileName}\r\n            onChange={(e) => setCustomFileName(e.target.value)}\r\n          />\r\n          <select\r\n            className=\"file-upload-select\"\r\n            value={selectedFolder}\r\n            onChange={(e) => setSelectedFolder(e.target.value)}\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select a folder\r\n            </option>\r\n            {addedFolders.map((folder) => (\r\n              <option key={folder.id} value={folder.name}>\r\n                {folder.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button className=\"file-upload-button\" onClick={handleUpload}>\r\n            업로드\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {isRenamePopupOpen && (\r\n        <div className=\"rename-popup\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"새로운 이름을 입력하세요\"\r\n            value={newName}\r\n            onChange={(e) => setNewName(e.target.value)}\r\n          />\r\n          <button onClick={handleRename}>이름 변경</button>\r\n          <button onClick={handleMoveToTrash}>휴지통으로 이동</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}