{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\SPB_Data\\\\keyloud_assemble\\\\frontend\\\\src\\\\components\\\\KeywordResult.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles/HomeScreen.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [searchKeyword, setSearchKeyword] = useState(\"\"); // 검색어 상태 추가\n\n  const handleSearchKeyword = async () => {\n    // 검색어가 비어있는지 확인\n    if (!searchKeyword.trim()) {\n      console.log(\"검색어를 입력하세요\");\n      return;\n    }\n\n    // 검색 결과를 가져오기\n    try {\n      const response = await axios.get(`http://localhost:5000/keyword_search?keyword=${encodeURIComponent(searchKeyword)}`);\n      const data = response.data;\n\n      // 홈 화면에서 검색 결과를 표시할 수 있도록 페이지로 이동\n      navigate(`/keyword-result`, {\n        state: {\n          searchResults: data,\n          searchKeyword\n        }\n      });\n    } catch (error) {\n      console.error(\"검색 결과를 가져오는 중 에러 발생:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9\\uD560 \\uD0A4\\uC6CC\\uB4DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: searchKeyword,\n        onChange: e => setSearchKeyword(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearchKeyword,\n        className: \"search-button\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeScreen, \"GMFjH5Xxp+MdtOSOhGVe3i4QTtw=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","HomeScreen","_s","navigate","searchKeyword","setSearchKeyword","handleSearchKeyword","trim","console","log","response","get","encodeURIComponent","data","state","searchResults","error","children","className","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/AppData/Roaming/SPB_Data/keyloud_assemble/frontend/src/components/KeywordResult.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./styles/HomeScreen.css\";\r\nimport axios from \"axios\";\r\n\r\nconst HomeScreen = () => {\r\n  const navigate = useNavigate();\r\n  const [searchKeyword, setSearchKeyword] = useState(\"\"); // 검색어 상태 추가\r\n\r\n  const handleSearchKeyword = async () => {\r\n    // 검색어가 비어있는지 확인\r\n    if (!searchKeyword.trim()) {\r\n      console.log(\"검색어를 입력하세요\");\r\n      return;\r\n    }\r\n\r\n    // 검색 결과를 가져오기\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:5000/keyword_search?keyword=${encodeURIComponent(searchKeyword)}`\r\n      );\r\n      const data = response.data;\r\n\r\n      // 홈 화면에서 검색 결과를 표시할 수 있도록 페이지로 이동\r\n      navigate(`/keyword-result`, {\r\n        state: {\r\n          searchResults: data,\r\n          searchKeyword,\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.error(\"검색 결과를 가져오는 중 에러 발생:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* 검색어 입력란과 버튼 */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"검색할 키워드를 입력하세요\"\r\n          value={searchKeyword}\r\n          onChange={(e) => setSearchKeyword(e.target.value)}\r\n          className=\"search-input\"\r\n        />\r\n        <button onClick={handleSearchKeyword} className=\"search-button\">\r\n          검색\r\n        </button>\r\n      </div>\r\n      {/* 기존의 폴더 및 파일 표시 코드 등 */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,yBAAyB;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExD,MAAMU,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC;IACA,IAAI,CAACF,aAAa,CAACG,IAAI,CAAC,CAAC,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzB;IACF;;IAEA;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC7B,gDAA+CC,kBAAkB,CAACR,aAAa,CAAE,EACpF,CAAC;MACD,MAAMS,IAAI,GAAGH,QAAQ,CAACG,IAAI;;MAE1B;MACAV,QAAQ,CAAE,iBAAgB,EAAE;QAC1BW,KAAK,EAAE;UACLC,aAAa,EAAEF,IAAI;UACnBT;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,eAEEjB,OAAA;MAAKkB,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC/BjB,OAAA;QACEmB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,4EAAgB;QAC5BC,KAAK,EAAEjB,aAAc;QACrBkB,QAAQ,EAAGC,CAAC,IAAKlB,gBAAgB,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAClDH,SAAS,EAAC;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACF5B,OAAA;QAAQ6B,OAAO,EAAEvB,mBAAoB;QAACY,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAC;MAEhE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAhDID,UAAU;EAAA,QACGJ,WAAW;AAAA;AAAAiC,EAAA,GADxB7B,UAAU;AAkDhB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}