{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\SPB_Data\\\\keyloud_assemble\\\\frontend\\\\src\\\\components\\\\HomeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport './styles/HomeScreen.css';\nimport { AppContext } from '../AppContext.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    folders,\n    uploadedFiles,\n    addFolder,\n    addFileToFolder,\n    setUploadedFiles\n  } = useContext(AppContext);\n  const [searchResults, setSearchResults] = useState([]);\n  const [isUploadMenuOpen, setUploadMenuOpen] = useState(false);\n  const [addedFolders, setAddedFolders] = useState([{\n    name: '최근 업로드 폴더',\n    id: 1\n  }]);\n  const [userKeyword, setUserKeyword] = useState('');\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [isRenamePopupOpen, setRenamePopupOpen] = useState(false);\n  const [newName, setNewName] = useState('');\n  useEffect(() => {\n    // 페이지 로드 시 로컬 스토리지에서 uploadedFiles 값을 가져옴\n    const storedUploadedFiles = localStorage.getItem('uploadedFiles');\n    if (storedUploadedFiles) {\n      setUploadedFiles(JSON.parse(storedUploadedFiles));\n    }\n\n    // 여기서 기본 폴더 정보를 추가합니다.\n    setAddedFolders([{\n      name: '최근 업로드 폴더',\n      id: 1\n    }]);\n  }, [setUploadedFiles]);\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      localStorage.setItem('uploadedFiles', JSON.stringify(uploadedFiles));\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [uploadedFiles]);\n  const [isCreateFolderPopupOpen, setCreateFolderPopupOpen] = useState(false);\n  const [newFolderName, setNewFolderName] = useState('');\n  const [isFileUploadPopupOpen, setFileUploadPopupOpen] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [customFileName, setCustomFileName] = useState('');\n  const [selectedFolder, setSelectedFolder] = useState('');\n  const [uploadedFilesState, setUploadedFilesState] = useState({});\n  const handleUploadButtonClick = () => {\n    setUploadMenuOpen(!isUploadMenuOpen);\n  };\n\n  // 파일 업로드 팝업 열기\n  const handleFileUploadButtonClick = () => {\n    setFileUploadPopupOpen(true);\n  };\n\n  // 파일 선택\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    setSelectedFile(file);\n  };\n\n  // 업로드 버튼 클릭 시\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    formData.append('originalname', customFileName);\n    formData.append('buffer', selectedFolder);\n    try {\n      const response = await fetch('http://localhost:5000/upload_files', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        const uploadedFileData = {\n          name: responseData.filename,\n          uploadDate: responseData.timestamp,\n          icon: ''\n        };\n\n        // setUploadedFiles((prevFiles) => ({\n        //   ...prevFiles,\n        //   [selectedFolder]: [...(prevFiles[selectedFolder] || []), uploadedFileData],\n        // }));\n\n        // addFileToFolder 함수를 사용하여 파일을 업로드한 폴더에 추가\n        addFileToFolder(selectedFolder, uploadedFileData);\n        console.log('File uploaded successfully');\n      } else {\n        console.error('File upload failed');\n      }\n    } catch (error) {\n      console.error('Error during file upload:', error);\n    }\n    setFileUploadPopupOpen(false);\n    setSelectedFile(null);\n    setCustomFileName('');\n    setSelectedFolder('');\n  };\n  const handleNavigateToKeywordResult = () => {\n    navigate(`/keyword-result?keyword=${userKeyword}`);\n  };\n  const handleFolderIconClick = folderName => {\n    setUploadMenuOpen(false);\n    // 여기서 폴더 아이콘 클릭 시의 로직을 추가하세요\n  };\n  const handleCreateFolderButtonClick = () => {\n    setCreateFolderPopupOpen(true);\n  };\n  const handleCreateFolder = () => {\n    if (newFolderName.trim() !== '') {\n      const newFolder = {\n        name: newFolderName,\n        id: Date.now()\n      };\n      addFolder(newFolder);\n      setAddedFolders(prevFolders => [...prevFolders, newFolder]);\n      setNewFolderName('');\n    }\n    setCreateFolderPopupOpen(false);\n  };\n  const handleItemClick = item => {\n    setSelectedItem(item);\n    setNewName(item.name);\n  };\n  const handleRename = () => {\n    if (newName.trim() !== '') {\n      const updatedFolders = addedFolders.map(folder => folder.id === selectedItem.id ? {\n        ...folder,\n        name: newName\n      } : folder);\n      setAddedFolders(updatedFolders);\n\n      // 파일 수정 로직은 uploadedFiles 상태를 업데이트해야 합니다.\n      // 추가: handleRename 함수 내용을 여기에 추가\n\n      setRenamePopupOpen(false);\n      setSelectedItem(null);\n    }\n  };\n\n  // 수정: handleMoveToTrash 함수 정의\n  const handleMoveToTrash = () => {\n    if (newName.trim() !== '') {\n      // handleRename 함수 내용을 여기에 직접 구현\n      const updatedFolders = addedFolders.map(folder => folder.id === selectedItem.id ? {\n        ...folder,\n        name: newName\n      } : folder);\n      setAddedFolders(updatedFolders);\n\n      // 파일 수정 로직은 uploadedFiles 상태를 업데이트해야 합니다.\n      // 추가: handleMoveToTrash 함수 내용을 여기에 추가\n\n      setRenamePopupOpen(false);\n      setSelectedItem(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [addedFolders.map(folder => {\n      var _uploadedFiles$folder;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-content\",\n          onClick: () => handleFolderIconClick(folder.name),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-icon img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/folder-icon.png\",\n              alt: \"\\uD3F4\\uB354 \\uC544\\uC774\\uCF58\",\n              style: {\n                width: '20px',\n                height: '20px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-name\",\n            children: folder.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-files-container\",\n          children: (_uploadedFiles$folder = uploadedFiles[folder.name]) === null || _uploadedFiles$folder === void 0 ? void 0 : _uploadedFiles$folder.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploaded-file\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: file.icon,\n              alt: \"File Icon\",\n              className: \"file-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 11\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 10\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 9\n        }, this)]\n      }, folder.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 8\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: handleUploadButtonClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/upload.png\",\n        alt: \"\\uC5C5\\uB85C\\uB4DC \\uC544\\uC774\\uCF58\",\n        style: {\n          width: '40px',\n          height: '35px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), isUploadMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-menu-button\",\n        onClick: handleCreateFolderButtonClick,\n        children: \"\\uD3F4\\uB354 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-menu-button\",\n        onClick: handleFileUploadButtonClick,\n        children: \"\\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), isCreateFolderPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-folder-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"create-folder-input\" // 추가: 클래스 이름 추가\n        ,\n        type: \"text\",\n        placeholder: \"\\uD3F4\\uB354\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-folder-button\",\n        onClick: handleCreateFolder,\n        children: \"\\uD3F4\\uB354 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), isFileUploadPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-upload-input\",\n        type: \"file\",\n        onChange: handleFileSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-upload-custom-input\",\n        type: \"text\",\n        placeholder: \"\\uD30C\\uC77C\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: customFileName,\n        onChange: e => setCustomFileName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"file-upload-select\",\n        value: selectedFolder,\n        onChange: e => setSelectedFolder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), addedFolders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: folder.name,\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"file-upload-button\",\n        onClick: handleUpload,\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), isRenamePopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rename-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC0C8\\uB85C\\uC6B4 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"\\uC774\\uB984 \\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMoveToTrash,\n        children: \"\\uD734\\uC9C0\\uD1B5\\uC73C\\uB85C \\uC774\\uB3D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeScreen, \"daFD6NWBKHT2bt6ZwSaoBjXB8bQ=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AppContext","useNavigate","jsxDEV","_jsxDEV","HomeScreen","_s","navigate","folders","uploadedFiles","addFolder","addFileToFolder","setUploadedFiles","searchResults","setSearchResults","isUploadMenuOpen","setUploadMenuOpen","addedFolders","setAddedFolders","name","id","userKeyword","setUserKeyword","selectedItem","setSelectedItem","isRenamePopupOpen","setRenamePopupOpen","newName","setNewName","storedUploadedFiles","localStorage","getItem","JSON","parse","handleBeforeUnload","setItem","stringify","window","addEventListener","removeEventListener","isCreateFolderPopupOpen","setCreateFolderPopupOpen","newFolderName","setNewFolderName","isFileUploadPopupOpen","setFileUploadPopupOpen","selectedFile","setSelectedFile","customFileName","setCustomFileName","selectedFolder","setSelectedFolder","uploadedFilesState","setUploadedFilesState","handleUploadButtonClick","handleFileUploadButtonClick","handleFileSelect","event","file","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","ok","responseData","json","uploadedFileData","filename","uploadDate","timestamp","icon","console","log","error","handleNavigateToKeywordResult","handleFolderIconClick","folderName","handleCreateFolderButtonClick","handleCreateFolder","trim","newFolder","Date","now","prevFolders","handleItemClick","item","handleRename","updatedFolders","map","folder","handleMoveToTrash","children","_uploadedFiles$folder","className","onClick","src","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","index","type","placeholder","value","onChange","e","disabled","_c","$RefreshReg$"],"sources":["C:/Users/USER/AppData/Roaming/SPB_Data/keyloud_assemble/frontend/src/components/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport './styles/HomeScreen.css';\r\nimport { AppContext } from '../AppContext.js';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst HomeScreen = () => {\r\n  const navigate = useNavigate();\r\n  const {\r\n    folders,\r\n    uploadedFiles,\r\n    addFolder,\r\n    addFileToFolder,\r\n    setUploadedFiles,\r\n  } = useContext(AppContext);\r\n\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isUploadMenuOpen, setUploadMenuOpen] = useState(false);\r\n  const [addedFolders, setAddedFolders] = useState([\r\n    { name: '최근 업로드 폴더', id: 1 },\r\n  ]);\r\n  const [userKeyword, setUserKeyword] = useState('');\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isRenamePopupOpen, setRenamePopupOpen] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  useEffect(() => {\r\n    // 페이지 로드 시 로컬 스토리지에서 uploadedFiles 값을 가져옴\r\n    const storedUploadedFiles = localStorage.getItem('uploadedFiles');\r\n    if (storedUploadedFiles) {\r\n      setUploadedFiles(JSON.parse(storedUploadedFiles));\r\n    }\r\n\r\n    // 여기서 기본 폴더 정보를 추가합니다.\r\n    setAddedFolders([{ name: '최근 업로드 폴더', id: 1 }]);\r\n  }, [setUploadedFiles]);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      localStorage.setItem('uploadedFiles', JSON.stringify(uploadedFiles));\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, [uploadedFiles]);  \r\n\r\n  const [isCreateFolderPopupOpen, setCreateFolderPopupOpen] = useState(false);\r\n  const [newFolderName, setNewFolderName] = useState('');\r\n\r\n  const [isFileUploadPopupOpen, setFileUploadPopupOpen] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [customFileName, setCustomFileName] = useState('');\r\n  const [selectedFolder, setSelectedFolder] = useState('');\r\n  const [uploadedFilesState, setUploadedFilesState] = useState({});\r\n   \r\n  \r\n  \r\n  \r\n  const handleUploadButtonClick = () => {\r\n    setUploadMenuOpen(!isUploadMenuOpen);\r\n  };\r\n\r\n  // 파일 업로드 팝업 열기\r\n  const handleFileUploadButtonClick = () => {\r\n    setFileUploadPopupOpen(true);\r\n  };\r\n\r\n  // 파일 선택\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  // 업로드 버튼 클릭 시\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n    formData.append('originalname', customFileName);\r\n    formData.append('buffer', selectedFolder);\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/upload_files', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const responseData = await response.json();\r\n        const uploadedFileData = {\r\n          name: responseData.filename,\r\n          uploadDate: responseData.timestamp,\r\n          icon: '',\r\n        };\r\n\r\n        // setUploadedFiles((prevFiles) => ({\r\n        //   ...prevFiles,\r\n        //   [selectedFolder]: [...(prevFiles[selectedFolder] || []), uploadedFileData],\r\n        // }));\r\n\r\n        // addFileToFolder 함수를 사용하여 파일을 업로드한 폴더에 추가\r\n        addFileToFolder(selectedFolder, uploadedFileData);\r\n\r\n        console.log('File uploaded successfully');\r\n      } else {\r\n        console.error('File upload failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during file upload:', error);\r\n    }\r\n\r\n    setFileUploadPopupOpen(false);\r\n    setSelectedFile(null);\r\n    setCustomFileName('');\r\n    setSelectedFolder('');\r\n  };\r\n  \r\n\r\n  const handleNavigateToKeywordResult = () => {\r\n    navigate(`/keyword-result?keyword=${userKeyword}`);\r\n  };\r\n\r\n  const handleFolderIconClick = (folderName) => {\r\n    setUploadMenuOpen(false);\r\n    // 여기서 폴더 아이콘 클릭 시의 로직을 추가하세요\r\n  };\r\n\r\n  const handleCreateFolderButtonClick = () => {\r\n    setCreateFolderPopupOpen(true);\r\n  };\r\n\r\n  const handleCreateFolder = () => {\r\n    if (newFolderName.trim() !== '') {\r\n      const newFolder = { name: newFolderName, id: Date.now() };\r\n      addFolder(newFolder);\r\n      setAddedFolders((prevFolders) => [...prevFolders, newFolder]);\r\n      setNewFolderName('');\r\n    }\r\n    setCreateFolderPopupOpen(false);\r\n  };\r\n\r\n  const handleItemClick = (item) => {\r\n    setSelectedItem(item);\r\n    setNewName(item.name);\r\n  };\r\n\r\n  \r\n  const handleRename = () => {\r\n    if (newName.trim() !== '') {\r\n      const updatedFolders = addedFolders.map((folder) =>\r\n        folder.id === selectedItem.id ? { ...folder, name: newName } : folder\r\n      );\r\n      setAddedFolders(updatedFolders);\r\n\r\n      // 파일 수정 로직은 uploadedFiles 상태를 업데이트해야 합니다.\r\n      // 추가: handleRename 함수 내용을 여기에 추가\r\n\r\n      setRenamePopupOpen(false);\r\n      setSelectedItem(null);\r\n    }\r\n  };\r\n\r\n  // 수정: handleMoveToTrash 함수 정의\r\n  const handleMoveToTrash = () => {\r\n    if (newName.trim() !== '') {\r\n      // handleRename 함수 내용을 여기에 직접 구현\r\n      const updatedFolders = addedFolders.map((folder) =>\r\n        folder.id === selectedItem.id ? { ...folder, name: newName } : folder\r\n      );\r\n      setAddedFolders(updatedFolders);\r\n\r\n      // 파일 수정 로직은 uploadedFiles 상태를 업데이트해야 합니다.\r\n      // 추가: handleMoveToTrash 함수 내용을 여기에 추가\r\n\r\n      setRenamePopupOpen(false);\r\n      setSelectedItem(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* 폴더 아이콘과 폴더명 세트 */}\r\n      {addedFolders.map((folder) => (\r\n       <div key={folder.id}>\r\n        <div className=\"folder-content\" onClick={() => handleFolderIconClick(folder.name)}>\r\n         <div className=\"folder-icon img\">\r\n         <img src=\"/images/folder-icon.png\" alt=\"폴더 아이콘\" style={{ width: '20px', height: '20px' }} />\r\n         </div>\r\n         <div className=\"folder-name\">{folder.name}</div>\r\n        </div>\r\n        <div className=\"uploaded-files-container\">\r\n         {uploadedFiles[folder.name]?.map((file, index) => (\r\n         <div key={index} className=\"uploaded-file\">\r\n          <img src={file.icon} alt=\"File Icon\" className=\"file-icon\" />\r\n          <div className=\"file-name\">{file.name}</div>\r\n         </div>\r\n        ))}\r\n        </div>\r\n       </div>\r\n      ))}\r\n\r\n      {/* 업로드 버튼 */}\r\n      <button className=\"upload-button\" onClick={handleUploadButtonClick}>\r\n        <img src=\"/images/upload.png\" alt=\"업로드 아이콘\" style={{ width: '40px', height: '35px' }} />\r\n      </button>\r\n\r\n      {/* 업로드 메뉴 */}\r\n      {isUploadMenuOpen && (\r\n        <div className=\"upload-menu\">\r\n          <button className=\"upload-menu-button\" onClick={handleCreateFolderButtonClick}>\r\n            폴더 생성\r\n          </button>\r\n          <button className=\"upload-menu-button\" onClick={handleFileUploadButtonClick}>파일 업로드</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 폴더 생성 팝업 */}\r\n      {isCreateFolderPopupOpen && (\r\n        <div className=\"create-folder-popup\">\r\n          <input\r\n           className=\"create-folder-input\" // 추가: 클래스 이름 추가\r\n           type=\"text\"\r\n           placeholder=\"폴더명을 입력하세요\"\r\n           value={newFolderName}\r\n           onChange={(e) => setNewFolderName(e.target.value)}\r\n          />\r\n         <button className=\"create-folder-button\" onClick={handleCreateFolder}>폴더 생성</button>\r\n       </div>\r\n      )}\r\n      \r\n      {/* 파일 업로드 팝업 */}\r\n      {isFileUploadPopupOpen && (\r\n        <div className=\"file-upload-popup\">\r\n          {/* 파일 선택을 위한 파일 입력란 */}\r\n          <input className=\"file-upload-input\" type=\"file\" onChange={handleFileSelect} />\r\n\r\n          {/* 사용자 정의 파일명 입력을 위한 입력란 */}\r\n          <input\r\n            className=\"file-upload-custom-input\"\r\n            type=\"text\"\r\n            placeholder=\"파일명을 입력하세요\"\r\n            value={customFileName}\r\n            onChange={(e) => setCustomFileName(e.target.value)}\r\n          />\r\n\r\n          {/* 폴더 선택을 위한 드롭다운 또는 UI */}\r\n          {/* 폴더를 선택하고 selectedFolder 상태를 업데이트하는 논리 또는 UI를 추가하세요 */}\r\n          <select\r\n            className=\"file-upload-select\"\r\n            value={selectedFolder}\r\n            onChange={(e) => setSelectedFolder(e.target.value)}\r\n          >\r\n            <option value=\"\" disabled>Select a folder</option>\r\n            {addedFolders.map((folder) => (\r\n              <option key={folder.id} value={folder.name}>{folder.name}</option>\r\n              ))}\r\n              </select>\r\n    \r\n              {/* 업로드 버튼 */}\r\n              <button \r\n              className=\"file-upload-button\"\r\n              onClick={handleUpload}>업로드</button>\r\n            </div>\r\n          )}\r\n        \r\n      {/* 팝업창 */}\r\n      {isRenamePopupOpen && (\r\n        <div className=\"rename-popup\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"새로운 이름을 입력하세요\"\r\n            value={newName}\r\n            onChange={(e) => setNewName(e.target.value)}\r\n          />\r\n          {/* 수정: handleRename 함수 호출로 변경 */}\r\n          <button onClick={handleRename}>이름 변경</button>\r\n          {/* 수정: handleMoveToTrash 함수 호출로 변경 */}\r\n          <button onClick={handleMoveToTrash}>휴지통으로 이동</button>\r\n        </div>\r\n      )}\r\n\r\n        </div>\r\n      );\r\n    };\r\n\r\nexport default HomeScreen;           "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}