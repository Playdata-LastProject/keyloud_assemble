{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\AppData\\\\Roaming\\\\SPB_Data\\\\keyloud_assemble\\\\frontend\\\\src\\\\components\\\\HomeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles/HomeScreen.css\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"../AppContext.js\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [searchResults, setSearchResults] = useState([]);\n  const {\n    folders,\n    uploadedFiles,\n    addFolder,\n    addFileToFolder,\n    setUploadedFiles\n  } = useContext(AppContext);\n  const [isUploadMenuOpen, setUploadMenuOpen] = useState(false);\n  const [addedFolders, setAddedFolders] = useState([{\n    name: \"최근 업로드 폴더\",\n    id: 1\n  }]);\n  const [userKeyword, setUserKeyword] = useState(\"\");\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [isRenamePopupOpen, setRenamePopupOpen] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const [newFolderName, setNewFolderName] = useState(\"\"); // 새로운 폴더명 추가\n\n  useEffect(() => {\n    // 페이지 로드 시 로컬 스토리지에서 uploadedFiles 값을 가져옴\n    const storedUploadedFiles = localStorage.getItem(\"uploadedFiles\");\n    if (storedUploadedFiles) {\n      setUploadedFiles(JSON.parse(storedUploadedFiles));\n    }\n\n    // 여기서 기본 폴더 정보를 추가합니다.\n    setAddedFolders([{\n      name: \"최근 업로드 폴더\",\n      id: 1\n    }]);\n  }, [setUploadedFiles]);\n  useEffect(() => {\n    const handleBeforeUnload = () => {\n      localStorage.setItem(\"uploadedFiles\", JSON.stringify(uploadedFiles));\n    };\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\n    return () => {\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\n    };\n  }, [uploadedFiles]);\n  const [isCreateFolderPopupOpen, setCreateFolderPopupOpen] = useState(false);\n  const handleCreateFolderButtonClick = () => {\n    setCreateFolderPopupOpen(true);\n  };\n  const handleCreateFolder = async () => {\n    try {\n      if (newFolderName.trim() !== \"\") {\n        const newFolder = {\n          name: newFolderName,\n          id: Date.now()\n        };\n        setAddedFolders(prevFolders => [...prevFolders, newFolder]);\n\n        // 서버로 새로운 폴더 정보를 전송\n        const response = await fetch(\"http://localhost:5000/create_folder\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(newFolder)\n        });\n        const data = await response.json();\n        console.log(data.message); // 서버로부터 받은 응답 메시지 출력\n\n        setNewFolderName(\"\");\n        setCreateFolderPopupOpen(false);\n      }\n    } catch (error) {\n      console.error(\"Error creating folder:\", error);\n    }\n  };\n  const handleItemClick = item => {\n    setSelectedItem(item);\n    setNewName(item.name);\n  };\n  const handleUpdateFolder = async actionType => {\n    try {\n      if (newName.trim() !== \"\") {\n        const updatedFolders = addedFolders.map(folder => folder.id === selectedItem.id ? {\n          ...folder,\n          name: newName\n        } : folder);\n        setAddedFolders(updatedFolders);\n\n        // 서버로 업데이트된 폴더 정보 전송\n        const response = await fetch(\"http://localhost:5000/update_folder\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            id: selectedItem.id,\n            actionType,\n            // 추가: 액션 타입을 서버로 전송\n            newName\n          })\n        });\n        const data = await response.json();\n        console.log(data.message); // 서버로부터 받은 응답 메시지 출력\n\n        setNewName(\"\");\n        setRenamePopupOpen(false);\n        setSelectedItem(null);\n      }\n    } catch (error) {\n      console.error(`Error ${actionType === \"rename\" ? \"renaming\" : \"moving to trash\"} folder:`, error);\n    }\n  };\n\n  // 수정: handleRename 함수 호출로 변경\n  const handleRename = () => {\n    handleUpdateFolder(\"rename\");\n  };\n\n  // 수정: handleMoveToTrash 함수 호출로 변경\n  const handleMoveToTrash = () => {\n    handleUpdateFolder(\"moveToTrash\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [addedFolders.map(folder => {\n      var _uploadedFiles$folder;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"folder-content\",\n          onClick: () => handleFolderIconClick(folder.name),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-icon img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/folder-icon.png\",\n              alt: \"\\uD3F4\\uB354 \\uC544\\uC774\\uCF58\",\n              style: {\n                width: \"20px\",\n                height: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"folder-name\",\n            children: folder.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"uploaded-files-container\",\n          children: (_uploadedFiles$folder = uploadedFiles[folder.name]) === null || _uploadedFiles$folder === void 0 ? void 0 : _uploadedFiles$folder.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"uploaded-file\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: file.icon,\n              alt: \"File Icon\",\n              className: \"file-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-name\",\n              children: file.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, folder.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: handleUploadButtonClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/upload.png\",\n        alt: \"\\uC5C5\\uB85C\\uB4DC \\uC544\\uC774\\uCF58\",\n        style: {\n          width: \"40px\",\n          height: \"35px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), isUploadMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-menu-button\",\n        onClick: handleCreateFolderButtonClick,\n        children: \"\\uD3F4\\uB354 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-menu-button\",\n        onClick: handleFileUploadButtonClick,\n        children: \"\\uD30C\\uC77C \\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), isCreateFolderPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-folder-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"create-folder-input\",\n        type: \"text\",\n        placeholder: \"\\uD3F4\\uB354\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-folder-button\",\n        onClick: handleCreateFolder,\n        children: \"\\uD3F4\\uB354 \\uC0DD\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), isFileUploadPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-upload-input\",\n        type: \"file\",\n        onChange: handleFileSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"file-upload-custom-input\",\n        type: \"text\",\n        placeholder: \"\\uD30C\\uC77C\\uBA85\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: customFileName,\n        onChange: e => setCustomFileName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"file-upload-select\",\n        value: selectedFolder,\n        onChange: e => setSelectedFolder(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a folder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), addedFolders.map(folder => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: folder.name,\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"file-upload-button\",\n        onClick: handleUpload,\n        children: \"\\uC5C5\\uB85C\\uB4DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), isRenamePopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rename-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC0C8\\uB85C\\uC6B4 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"\\uC774\\uB984 \\uBCC0\\uACBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMoveToTrash,\n        children: \"\\uD734\\uC9C0\\uD1B5\\uC73C\\uB85C \\uC774\\uB3D9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(HomeScreen, \"e5rMEJM1bo4vKZXeeSj7IjnS4qs=\", false, function () {\n  return [useNavigate];\n});\n_c = HomeScreen;\nexport default HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AppContext","useNavigate","jsxDEV","_jsxDEV","HomeScreen","_s","navigate","searchResults","setSearchResults","folders","uploadedFiles","addFolder","addFileToFolder","setUploadedFiles","isUploadMenuOpen","setUploadMenuOpen","addedFolders","setAddedFolders","name","id","userKeyword","setUserKeyword","selectedItem","setSelectedItem","isRenamePopupOpen","setRenamePopupOpen","newName","setNewName","newFolderName","setNewFolderName","storedUploadedFiles","localStorage","getItem","JSON","parse","handleBeforeUnload","setItem","stringify","window","addEventListener","removeEventListener","isCreateFolderPopupOpen","setCreateFolderPopupOpen","handleCreateFolderButtonClick","handleCreateFolder","trim","newFolder","Date","now","prevFolders","response","fetch","method","headers","body","data","json","console","log","message","error","handleItemClick","item","handleUpdateFolder","actionType","updatedFolders","map","folder","handleRename","handleMoveToTrash","children","_uploadedFiles$folder","className","onClick","handleFolderIconClick","src","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","file","index","icon","handleUploadButtonClick","handleFileUploadButtonClick","type","placeholder","value","onChange","e","target","isFileUploadPopupOpen","handleFileSelect","customFileName","setCustomFileName","selectedFolder","setSelectedFolder","disabled","handleUpload","_c","$RefreshReg$"],"sources":["C:/Users/USER/AppData/Roaming/SPB_Data/keyloud_assemble/frontend/src/components/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles/HomeScreen.css\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../AppContext.js\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst HomeScreen = () => {\r\n  const navigate = useNavigate();\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const {\r\n    folders,\r\n    uploadedFiles,\r\n    addFolder,\r\n    addFileToFolder,\r\n    setUploadedFiles,\r\n  } = useContext(AppContext);\r\n  const [isUploadMenuOpen, setUploadMenuOpen] = useState(false);\r\n  const [addedFolders, setAddedFolders] = useState([\r\n    { name: \"최근 업로드 폴더\", id: 1 },\r\n  ]);\r\n  const [userKeyword, setUserKeyword] = useState(\"\");\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [isRenamePopupOpen, setRenamePopupOpen] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newFolderName, setNewFolderName] = useState(\"\"); // 새로운 폴더명 추가\r\n\r\n  useEffect(() => {\r\n    // 페이지 로드 시 로컬 스토리지에서 uploadedFiles 값을 가져옴\r\n    const storedUploadedFiles = localStorage.getItem(\"uploadedFiles\");\r\n    if (storedUploadedFiles) {\r\n      setUploadedFiles(JSON.parse(storedUploadedFiles));\r\n    }\r\n\r\n    // 여기서 기본 폴더 정보를 추가합니다.\r\n    setAddedFolders([{ name: \"최근 업로드 폴더\", id: 1 }]);\r\n  }, [setUploadedFiles]);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      localStorage.setItem(\"uploadedFiles\", JSON.stringify(uploadedFiles));\r\n    };\r\n\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", handleBeforeUnload);\r\n    };\r\n  }, [uploadedFiles]);\r\n\r\n  const [isCreateFolderPopupOpen, setCreateFolderPopupOpen] = useState(false);\r\n\r\n  const handleCreateFolderButtonClick = () => {\r\n    setCreateFolderPopupOpen(true);\r\n  };\r\n\r\n  const handleCreateFolder = async () => {\r\n    try {\r\n      if (newFolderName.trim() !== \"\") {\r\n        const newFolder = { name: newFolderName, id: Date.now() };\r\n        setAddedFolders((prevFolders) => [...prevFolders, newFolder]);\r\n\r\n        // 서버로 새로운 폴더 정보를 전송\r\n        const response = await fetch(\"http://localhost:5000/create_folder\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(newFolder),\r\n        });\r\n\r\n        const data = await response.json();\r\n        console.log(data.message); // 서버로부터 받은 응답 메시지 출력\r\n\r\n        setNewFolderName(\"\");\r\n        setCreateFolderPopupOpen(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating folder:\", error);\r\n    }\r\n  };\r\n\r\n  const handleItemClick = (item) => {\r\n    setSelectedItem(item);\r\n    setNewName(item.name);\r\n  };\r\n\r\n  const handleUpdateFolder = async (actionType) => {\r\n    try {\r\n      if (newName.trim() !== \"\") {\r\n        const updatedFolders = addedFolders.map((folder) =>\r\n          folder.id === selectedItem.id\r\n            ? { ...folder, name: newName }\r\n            : folder\r\n        );\r\n        setAddedFolders(updatedFolders);\r\n  \r\n        // 서버로 업데이트된 폴더 정보 전송\r\n        const response = await fetch(\"http://localhost:5000/update_folder\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            id: selectedItem.id,\r\n            actionType, // 추가: 액션 타입을 서버로 전송\r\n            newName,\r\n          }),\r\n        });\r\n  \r\n        const data = await response.json();\r\n        console.log(data.message); // 서버로부터 받은 응답 메시지 출력\r\n  \r\n        setNewName(\"\");\r\n        setRenamePopupOpen(false);\r\n        setSelectedItem(null);\r\n      }\r\n    } catch (error) {\r\n      console.error(`Error ${actionType === \"rename\" ? \"renaming\" : \"moving to trash\"} folder:`, error);\r\n    }\r\n  };\r\n  \r\n  // 수정: handleRename 함수 호출로 변경\r\n  const handleRename = () => {\r\n    handleUpdateFolder(\"rename\");\r\n  };\r\n  \r\n  // 수정: handleMoveToTrash 함수 호출로 변경\r\n  const handleMoveToTrash = () => {\r\n    handleUpdateFolder(\"moveToTrash\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* 폴더 아이콘과 폴더명 세트 */}\r\n      {addedFolders.map((folder) => (\r\n        <div key={folder.id}>\r\n          <div\r\n            className=\"folder-content\"\r\n            onClick={() => handleFolderIconClick(folder.name)}\r\n          >\r\n            <div className=\"folder-icon img\">\r\n              <img\r\n                src=\"/images/folder-icon.png\"\r\n                alt=\"폴더 아이콘\"\r\n                style={{ width: \"20px\", height: \"20px\" }}\r\n              />\r\n            </div>\r\n            <div className=\"folder-name\">{folder.name}</div>\r\n          </div>\r\n          <div className=\"uploaded-files-container\">\r\n            {uploadedFiles[folder.name]?.map((file, index) => (\r\n              <div key={index} className=\"uploaded-file\">\r\n                <img src={file.icon} alt=\"File Icon\" className=\"file-icon\" />\r\n                <div className=\"file-name\">{file.name}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      {/* 업로드 버튼 */}\r\n      <button className=\"upload-button\" onClick={handleUploadButtonClick}>\r\n        <img\r\n          src=\"/images/upload.png\"\r\n          alt=\"업로드 아이콘\"\r\n          style={{ width: \"40px\", height: \"35px\" }}\r\n        />\r\n      </button>\r\n\r\n      {/* 업로드 메뉴 */}\r\n      {isUploadMenuOpen && (\r\n        <div className=\"upload-menu\">\r\n          <button\r\n            className=\"upload-menu-button\"\r\n            onClick={handleCreateFolderButtonClick}\r\n          >\r\n            폴더 생성\r\n          </button>\r\n          <button\r\n            className=\"upload-menu-button\"\r\n            onClick={handleFileUploadButtonClick}\r\n          >\r\n            파일 업로드\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 폴더 생성 팝업 */}\r\n      {isCreateFolderPopupOpen && (\r\n        <div className=\"create-folder-popup\">\r\n          <input\r\n            className=\"create-folder-input\"\r\n            type=\"text\"\r\n            placeholder=\"폴더명을 입력하세요\"\r\n            value={newFolderName}\r\n            onChange={(e) => setNewFolderName(e.target.value)}\r\n          />\r\n          <button className=\"create-folder-button\" onClick={handleCreateFolder}>\r\n            폴더 생성\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 파일 업로드 팝업 */}\r\n      {isFileUploadPopupOpen && (\r\n        <div className=\"file-upload-popup\">\r\n          {/* 파일 선택을 위한 파일 입력란 */}\r\n          <input\r\n            className=\"file-upload-input\"\r\n            type=\"file\"\r\n            onChange={handleFileSelect}\r\n          />\r\n\r\n          {/* 사용자 정의 파일명 입력을 위한 입력란 */}\r\n          <input\r\n            className=\"file-upload-custom-input\"\r\n            type=\"text\"\r\n            placeholder=\"파일명을 입력하세요\"\r\n            value={customFileName}\r\n            onChange={(e) => setCustomFileName(e.target.value)}\r\n          />\r\n\r\n          {/* 폴더 선택을 위한 드롭다운 또는 UI */}\r\n          {/* 폴더를 선택하고 selectedFolder 상태를 업데이트하는 논리 또는 UI를 추가하세요 */}\r\n          <select\r\n            className=\"file-upload-select\"\r\n            value={selectedFolder}\r\n            onChange={(e) => setSelectedFolder(e.target.value)}\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select a folder\r\n            </option>\r\n            {addedFolders.map((folder) => (\r\n              <option key={folder.id} value={folder.name}>\r\n                {folder.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          {/* 업로드 버튼 */}\r\n          <button className=\"file-upload-button\" onClick={handleUpload}>\r\n            업로드\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 팝업창 */}\r\n      {isRenamePopupOpen && (\r\n        <div className=\"rename-popup\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"새로운 이름을 입력하세요\"\r\n            value={newName}\r\n            onChange={(e) => setNewName(e.target.value)}\r\n          />\r\n          {/* 수정: handleRename 함수 호출로 변경 */}\r\n          <button onClick={handleRename}>이름 변경</button>\r\n          {/* 수정: handleMoveToTrash 함수 호출로 변경 */}\r\n          <button onClick={handleMoveToTrash}>휴지통으로 이동</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}